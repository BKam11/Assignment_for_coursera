{"version":3,"sources":["homeComponents/greet.jsx","homeComponents/navbar.jsx","homeComponents/typewriter.jsx","homeComponents/images/graph.png","homeComponents/card.jsx","homeComponents/card2.jsx","homeComponents/images/primes.jpg","homeComponents/sort.png","homeComponents/images/queen.PNG","homeComponents/images/binaryTree.png","homeComponents/images/convexHull.png","homeComponents/images/15puzzle.PNG","homeComponents/images/sudoku.png","homeComponents/cards.jsx","homeComponents/cardDetails.js","homeComponents/home.jsx","homeComponents/footer.jsx","sortComponents/greet.jsx","sortComponents/images/graph.png","sortComponents/card.jsx","sortComponents/card2.jsx","sortComponents/images/primes.jpg","sortComponents/sort.png","sortComponents/images/queen.PNG","sortComponents/images/binaryTree.png","sortComponents/images/convexHull.png","sortComponents/images/15puzzle.PNG","sortComponents/images/sudoku.png","sortComponents/cards.jsx","sortComponents/cardDetails.js","sortComponents/home.jsx","sortComponents/bubbleSort/rect.jsx","sortComponents/bubbleSort/rects.jsx","sortComponents/bubbleSort/sortingAlgorithms.js","sortComponents/bubbleSort/quickSort.js","sortComponents/bubbleSort/navbar.jsx","sortComponents/bubbleSort/slider.jsx","sortComponents/bubbleSort/menu1.jsx","sortComponents/bubbleSort/menu2.jsx","sortComponents/bubbleSort/sort.js","sortComponents/selectionSort/rect.jsx","sortComponents/selectionSort/rects.jsx","sortComponents/selectionSort/sortingAlgorithms.js","sortComponents/selectionSort/navbar.jsx","sortComponents/selectionSort/slider.jsx","sortComponents/selectionSort/menu1.jsx","sortComponents/selectionSort/menu2.jsx","sortComponents/selectionSort/sort.js","sortComponents/insertionSort/rect.jsx","sortComponents/insertionSort/rects.jsx","sortComponents/insertionSort/sortingAlgorithms.js","sortComponents/insertionSort/navbar.jsx","sortComponents/insertionSort/slider.jsx","sortComponents/insertionSort/menu1.jsx","sortComponents/insertionSort/menu2.jsx","sortComponents/insertionSort/sort.js","sortComponents/quickSort/rect.jsx","sortComponents/quickSort/rects.jsx","sortComponents/quickSort/quickSort.js","sortComponents/quickSort/navbar.jsx","sortComponents/quickSort/slider.jsx","sortComponents/quickSort/menu1.jsx","sortComponents/quickSort/menu2.jsx","sortComponents/quickSort/sort.js","sortComponents/comparision/rect.jsx","sortComponents/comparision/rects.jsx","sortComponents/comparision/sortingAlgorithms.js","sortComponents/comparision/quickSort.js","sortComponents/comparision/navbar.jsx","sortComponents/comparision/slider.jsx","sortComponents/comparision/simpleSelect.jsx","sortComponents/comparision/airBnbSlider.jsx","sortComponents/comparision/doubleSlider.jsx","sortComponents/comparision/formControlLabel.jsx","sortComponents/comparision/menu1.jsx","sortComponents/comparision/menu2.jsx","sortComponents/comparision/sort.js","sortComponents/sort.js","queenComponents/queen.png","queenComponents/cell.jsx","queenComponents/cells.jsx","queenComponents/navbar.jsx","queenComponents/slider.jsx","queenComponents/menu.jsx","queenComponents/queen.jsx","recursiveSortComponents/rect.jsx","recursiveSortComponents/rects.jsx","algorithms/mergeSort.js","algorithms/heapSort.js","algorithms/quickSortRecursive.js","recursiveSortComponents/navbar.jsx","recursiveSortComponents/slider.jsx","recursiveSortComponents/menu1.jsx","recursiveSortComponents/menu2.jsx","recursiveSortComponents/recursiveSort.js","App.js","reportWebVitals.js","index.js"],"names":["Greet","Component","class","className","makeStyles","card","minWidth","maxWidth","minHeight","borderRadius","boxShadow","media","height","actionArea","padding","transition","transform","useStyles","theme","expand","marginLeft","transitions","create","duration","shortest","expandOpen","ImgMediaCard2","props","classes","React","useState","expanded","setExpanded","CardActionArea","m","Card","to","route","CardMedia","component","alt","title","src","img","CardHeader","style","backgroundColor","action","IconButton","clsx","onClick","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","CardContent","Typography","description","Cards","state","cards","filter","getData","e","console","log","target","value","setState","this","id","sort","queen","Fragment","toLowerCase","includes","map","Home","graph","primes","Rect","checkColor","rect","isSorted","isSorting","width","background","margin","marg","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","marginBottom","Rects","rects","length","rectidx","selectionSort","arr","pairs","n","prevRect","slice","i","min_idx","j","push","xx","yy","changed","recti","rectj","bubbleSort","insertionSort","key","values","quickSort","rects2","sz","quick","left","right","partition","pivot","it","rect1","rect2","getPartition","Navbar","root","valuetext","DiscreteSlider","gutterBottom","Slider","defaultValue","default","getAriaValueText","aria-labelledby","valueLabelDisplay","onChangeCommitted","event","innerText","num","parseInt","onCountChange","step","min","max","disable","Menu1","isClickable","cursor","Menu2","onRandomize","disabled","onViusalize","onSpeedChange","Sort","count","doubles","speed","isRunning","isRunning1","isRunning2","algo1","algo2","handleRandomize","getInitialRects","handleRefresh","handleDouble","val","handleCountChange","handleAlgoChanged","pos","handleSpeedChanged","handleSort","steps1","steps2","handleFirst","handleSecond","steps","a","sleep","onDoubleChange","onRefresh","onAlgoChanged","ms","Promise","resolve","setTimeout","tot","getRect","Math","floor","random","formControl","spacing","selectEmpty","marginTop","SimpleSelect","age","setAge","FormControl","InputLabel","Select","labelId","onChange","MenuItem","selected","withStyles","color","thumb","border","marginRight","active","track","rail","opacity","SwitchLabels","checkedA","FormGroup","row","FormControlLabel","control","Switch","checked","name","label","basename","path","Bubble","Selection","Insertion","Quick","Comparision","Cell","getClassName","cell","isAttacked","isCurrent","isPresent","isChecked","getStyled","col","Cells","board","rowidx","cellidx","Menu","onClear","Queen","number","handleStop","handleSpeedChange","handleQueenChange","getBoard","handleClear","handleTurnOff","newBoard","turnOffAttack","startAlgo","queensAlgo","newBoard2","result","getChecked","textAlign","onStop","N","rows","cols","getCell","isLeft","isRight","checkBorder","isRange","mergeSort","mergeS","l","r","n1","n2","L","R","k","merge","mid","HeapSort","heapify","temp","sorted","heapSort","largest","quickSortRecursive","swap","changedRange","RecursiveSort","algo","handleMerge","handleHeap","handleQuick","hasChanged","ii","App","window","innerHeight","innerWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c1b12c0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.css\";\nclass Greet extends Component {\n  render() {\n    return (\n      <>  \n      <nav class=\"navbar navbar-light\">\n          <div className=\"container-fluid\">\n            <div className=\"navbar-brand\">\n              <h2>Algorithm</h2>\n            </div>\n          </div>\n          </nav>\n      </>\n    );\n  }\n}\n\nexport default Greet;\n","import React, { Component } from \"react\";\n\nclass Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark \">\n        <a className=\"navbar-brand\" href=\"#\">\n          Algorithm Visualizer\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\"></li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, {Component} from 'react';\nimport Typewriter from \"typewriter-effect\";\nimport './style.css'\nclass TypeWriterC extends Component {\n    state = {\n\n    }\n    render() {\n        return (\n            <div className=\"type display-3\">\n                <span className=\"badge badge-dark\">\n                <Typewriter\n                    options={{\n                        strings: ['Graph Algorithms', 'Sorting Algorithms',\"8 Queen\"],\n                        autoStart: true,\n                        loop: true,\n                    }}\n                />\n            </span>\n            </div>\n        );\n    }\n}\n\nexport default TypeWriterC;","export default __webpack_public_path__ + \"static/media/graph.6e6849d5.png\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport \"./style.css\";\nimport \"./images/graph.png\";\nimport {ExpandMore} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles({\n    card: {\n        minWidth: 350,\n        maxWidth:350,\n        minHeight:250,\n        borderRadius: 5,\n        '&:hover': {\n            boxShadow: `0 6px 12px 0 #000000\n                .rotate(-12)\n                .darken(0.2)\n                .fade(0.5)}`\n                ,\n        },\n    },\n    media: {\n        height: 140\n    },\n    actionArea: {\n        padding:15,\n        transition: '0.2s',\n        '&:hover': {\n            transform: 'scale(1.1)',\n\n        },\n    },\n});\n\nexport default function ImgMediaCard(props) {\n    const classes = useStyles();\n\n    return (\n        <CardActionArea className={classes.actionArea} m={20}>\n            <Card\n                className={classes.card}\n                >\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"140\"\n                    src={props.card.img}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\"  >\n                        {props.card.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {props.card.description}\n                    </Typography>\n                    <ExpandMore/>\n                </CardContent>\n            </Card>\n        </CardActionArea>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport \"./style.css\";\nimport \"./images/graph.png\";\nimport {ExpandMore} from \"@material-ui/icons\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        minWidth: 350,\n        maxWidth:350,\n        minHeight:200,\n        borderRadius: 5,\n        '&:hover': {\n            boxShadow: `0 6px 12px 0 #000000\n                .rotate(-12)\n                .darken(0.2)\n                .fade(0.5)}`\n                ,\n        },\n    },\n    media: {\n        height: 100\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    actionArea: {\n        padding:15,\n        transition: '0.2s',\n        '&:hover': {\n            transform: 'scale(1.1)',\n\n        },\n    },\n}));\n\nexport default function ImgMediaCard2(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    return (\n        <CardActionArea className={classes.actionArea} m={20}>\n            <Card\n                className={classes.card}\n                >\n               <Link to={props.card.route}>\n                   <CardMedia\n                       component=\"img\"\n                       alt={props.card.title}\n                       height=\"150\"\n                       src={props.card.img}\n                   />\n               </Link>\n                <CardHeader\n                    title={props.card.title}\n                    style={{backgroundColor:\"#F08080\"}}\n                    action={\n                        <IconButton\n                            className={clsx(classes.expand, {\n                                [classes.expandOpen]: expanded,\n                            })}\n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label=\"show more\"\n                        >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                    }\n                />\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent\n                        style={{backgroundColor:\"#F08080\"}}\n                    >\n                        <Typography>\n                            {props.card.description}\n                        </Typography>\n                    </CardContent>\n                </Collapse>\n            </Card>\n        </CardActionArea>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/primes.72a2f33f.jpg\";","export default __webpack_public_path__ + \"static/media/sort.117e08fc.png\";","export default __webpack_public_path__ + \"static/media/queen.b2332ba3.PNG\";","export default __webpack_public_path__ + \"static/media/binaryTree.6d8ce938.png\";","export default __webpack_public_path__ + \"static/media/convexHull.2720e7cd.png\";","export default __webpack_public_path__ + \"static/media/15puzzle.5f6e8f37.PNG\";","export default __webpack_public_path__ + \"static/media/sudoku.58363375.png\";","import React, { Component } from \"react\";\nimport ImgMediaCard from \"./card\";\nimport ImgMediaCard2 from \"./card2\";\nimport \"./style.css\";\nimport { Link } from \"react-router-dom\";\nimport graph from \"./images/graph.png\";\nimport primes from \"./images/primes.jpg\";\nimport sort from \"./sort.png\";\nimport queen from \"./images/queen.PNG\";\nimport binSearch from \"./images/binaryTree.png\";\nimport { getDetails } from \"./cardDetails\";\nimport TextField from \"@material-ui/core/TextField\";\nclass Cards extends Component {\n  state = {\n    cards: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    this.setState({ cards: getDetails() });\n  }\n  getData = (e) => {\n    console.log(e.target.value);\n    this.setState({ filter: e.target.value });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        {/* <div className=\"d-flex justify-content-end Cards\">\n                   <TextField\n                       id=\"standard-basic\" label=\"Search\"\n                       color=\"secondary\"\n                       onChange={this.getData}\n                   />\n               </div> */}\n        <div className=\"d-flex flex-wrap justify-content-center Cards p-lg-5\">\n          {this.state.cards\n            .filter(\n              (card) =>\n                card.title\n                  .toLowerCase()\n                  .includes(this.state.filter.toLowerCase()) ||\n                card.description\n                  .toLowerCase()\n                  .includes(this.state.filter.toLowerCase())\n            )\n            .map((card) => (\n              <div>\n                <ImgMediaCard2\n                  className=\"d-flex flex-wrap\"\n                  key={card.id}\n                  card={card}\n                />\n              </div>\n            ))}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Cards;\n/*\n<div>\n   <ImgMediaCard2\n       className=\"d-flex flex-wrap\"\n       key={card.id}\n       card={card}/>\n</div>\n */\n","import graph from \"./images/graph.png\";\nimport primes from \"./images/primes.jpg\";\nimport sort from \"./sort.png\";\nimport queen from \"./images/queen.PNG\";\nimport binSearch from \"./images/binaryTree.png\";\nimport convex from './images/convexHull.png';\nimport puzzle from './images/15puzzle.PNG';\nimport sudoku from './images/sudoku.png';\nexport function getDetails(){\n   return [\n       {\n           id:1,\n           title:\"Sorting Algorithm\",\n           description:\"Some common sorting algorithm\",\n           route:\"/sort\",\n           img:sort\n       },\n       {\n           id:2,\n           title:\"Divide and Conquer Algorithm\",\n           description:\"Algorithms based on divide and conquer technique\",\n           route:\"/recursivesort\",\n           img:sort\n       },\n       {\n           id:3,\n           title:\"Backtracking\",\n           description:\"Some backtracking algorithm\",\n           route:\"/nqueen\",\n           img:queen\n       }\n   ]\n}","import React, { Component } from \"react\";\nimport Navbar from \"./navbar\";\nimport Greet from \"./greet\";\nimport TypeWriterC from \"./typewriter\";\nimport Cards from \"./cards\";\nimport Footer from \"./footer\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        {/* <Navbar /> */}\n        <Greet />\n        {/* <TypeWriterC/> */}\n        <Cards />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport GitHubButton from \"react-github-btn\";\nimport \"./style.css\";\nclass Footer extends Component {\n  render() {\n    return (\n      <footer class=\"page-footer font-small special-color-dark pt-4 \">\n        <div class=\"footer-copyright text-center py-3\">© 2021 Copyright:</div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nclass Greet extends Component {\n  render() {\n    return (\n      <>  \n      <nav class=\"navbar navbar-light\">\n          <div className=\"container-fluid\">\n            <div className=\"navbar-brand\">\n              <span>Sorting Algorithm</span>\n            </div>\n          </div>\n          </nav>\n      </>\n    );\n  }\n}\n\nexport default Greet;\n","export default __webpack_public_path__ + \"static/media/graph.6e6849d5.png\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport \"./style.css\";\nimport \"./images/graph.png\";\nimport {ExpandMore} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles({\n    card: {\n        minWidth: 350,\n        maxWidth:350,\n        minHeight:250,\n        borderRadius: 5,\n        '&:hover': {\n            boxShadow: `0 6px 12px 0 #000000\n                .rotate(-12)\n                .darken(0.2)\n                .fade(0.5)}`\n                ,\n        },\n    },\n    media: {\n        height: 140\n    },\n    actionArea: {\n        padding:15,\n        transition: '0.2s',\n        '&:hover': {\n            transform: 'scale(1.1)',\n\n        },\n    },\n});\n\nexport default function ImgMediaCard(props) {\n    const classes = useStyles();\n\n    return (\n        <CardActionArea className={classes.actionArea} m={20}>\n            <Card\n                className={classes.card}\n                >\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    height=\"140\"\n                    src={props.card.img}\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\"  >\n                        {props.card.title}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {props.card.description}\n                    </Typography>\n                    <ExpandMore/>\n                </CardContent>\n            </Card>\n        </CardActionArea>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport \"./style.css\";\nimport \"./images/graph.png\";\nimport {ExpandMore} from \"@material-ui/icons\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        minWidth: 350,\n        maxWidth:350,\n        minHeight:200,\n        borderRadius: 5,\n        '&:hover': {\n            boxShadow: `0 6px 12px 0 #000000\n                .rotate(-12)\n                .darken(0.2)\n                .fade(0.5)}`\n                ,\n        },\n    },\n    media: {\n        height: 100\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    actionArea: {\n        padding:15,\n        transition: '0.2s',\n        '&:hover': {\n            transform: 'scale(1.1)',\n\n        },\n    },\n}));\n\nexport default function ImgMediaCard2(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    return (\n        <CardActionArea className={classes.actionArea} m={20}>\n            <Card\n                className={classes.card}\n                >\n               <Link to={props.card.route}>\n                   <CardMedia\n                       component=\"img\"\n                       alt={props.card.title}\n                       height=\"150\"\n                       src={props.card.img}\n                   />\n               </Link>\n                <CardHeader\n                    title={props.card.title}\n                    style={{backgroundColor:\"#F08080\"}}\n                    action={\n                        <IconButton\n                            className={clsx(classes.expand, {\n                                [classes.expandOpen]: expanded,\n                            })}\n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label=\"show more\"\n                        >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                    }\n                />\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent\n                        style={{backgroundColor:\"#F08080\"}}\n                    >\n                        <Typography>\n                            {props.card.description}\n                        </Typography>\n                    </CardContent>\n                </Collapse>\n            </Card>\n        </CardActionArea>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/primes.72a2f33f.jpg\";","export default __webpack_public_path__ + \"static/media/sort.117e08fc.png\";","export default __webpack_public_path__ + \"static/media/queen.b2332ba3.PNG\";","export default __webpack_public_path__ + \"static/media/binaryTree.6d8ce938.png\";","export default __webpack_public_path__ + \"static/media/convexHull.2720e7cd.png\";","export default __webpack_public_path__ + \"static/media/15puzzle.5f6e8f37.PNG\";","export default __webpack_public_path__ + \"static/media/sudoku.58363375.png\";","import React, { Component } from \"react\";\nimport ImgMediaCard from \"./card\";\nimport ImgMediaCard2 from \"./card2\";\nimport \"./style.css\";\nimport { Link } from \"react-router-dom\";\nimport graph from \"./images/graph.png\";\nimport primes from \"./images/primes.jpg\";\nimport sort from \"./sort.png\";\nimport queen from \"./images/queen.PNG\";\nimport binSearch from \"./images/binaryTree.png\";\nimport { getDetails } from \"./cardDetails\";\nimport TextField from \"@material-ui/core/TextField\";\nclass Cards extends Component {\n  state = {\n    cards: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    this.setState({ cards: getDetails() });\n  }\n  getData = (e) => {\n    console.log(e.target.value);\n    this.setState({ filter: e.target.value });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        {/* <div className=\"d-flex justify-content-end Cards\">\n                   <TextField\n                       id=\"standard-basic\" label=\"Search\"\n                       color=\"secondary\"\n                       onChange={this.getData}\n                   />\n               </div> */}\n        <div className=\"d-flex flex-wrap justify-content-center Cards p-lg-5\">\n          {this.state.cards\n            .filter(\n              (card) =>\n                card.title\n                  .toLowerCase()\n                  .includes(this.state.filter.toLowerCase()) ||\n                card.description\n                  .toLowerCase()\n                  .includes(this.state.filter.toLowerCase())\n            )\n            .map((card) => (\n              <div>\n                <ImgMediaCard2\n                  className=\"d-flex flex-wrap\"\n                  key={card.id}\n                  card={card}\n                />\n              </div>\n            ))}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Cards;\n/*\n<div>\n   <ImgMediaCard2\n       className=\"d-flex flex-wrap\"\n       key={card.id}\n       card={card}/>\n</div>\n */\n","import graph from \"./images/graph.png\";\nimport primes from \"./images/primes.jpg\";\nimport sort from \"./sort.png\";\nimport queen from \"./images/queen.PNG\";\nimport binSearch from \"./images/binaryTree.png\";\nimport convex from './images/convexHull.png';\nimport puzzle from './images/15puzzle.PNG';\nimport sudoku from './images/sudoku.png';\nexport function getDetails() {\n    return [{\n            id: 1,\n            title: \"Bubble Sort\",\n            description: \"Visualize graph algorithms like dijkstra, BFS, DFS\",\n            route: \"/bubbleSort\",\n            img: graph\n        }\n        ,\n                {\n                    id: 2,\n                    title: \"Selection Sort\",\n                    description: \"Visualize how Seive is better than brute force\",\n                    route: \"/selectionSort\",\n                    img: primes\n                },\n                {\n                    id: 3,\n                    title: \"Insertion Sort\",\n                    description: \"Compare different sorting algorithms\",\n                    route: \"/insertionSort\",\n                    img: sort\n                },\n                {\n                    id: 4,\n                    title: \"Quick Sort\",\n                    description: \"Compare different recursive sorting algorithms\",\n                    route: \"/quickSort\",\n                    img: sort\n                },\n                {\n                    id: 5,\n                    title: \"Comparision\",\n                    description: \"The N queens puzzle is the problem of placing N chess queens on an N*N chessboard so that no two queens threaten each other\",\n                    route: \"/comparision\",\n                    img: queen\n                }\n\n    ]\n}","import React, { Component } from \"react\";\nimport Greet from \"./greet\";\nimport Cards from \"./cards\";\n\nclass Home extends Component {\n    render() {\n        return (\n            <React.Fragment>\n        <Greet />\n        <Cards />\n\n      </React.Fragment>\n        );\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport './style.css';\nclass Rect extends Component {\n\n    render() {\n        return (\n            <div>\n                <div\n                    className='rect'\n                    style={{height:this.props.rect.width,\n                        background:this.checkColor(),\n                        margin:this.props.marg,\n                        borderTopLeftRadius:5,\n                        borderTopRightRadius:5,\n                        borderBottomLeftRadius:0,\n                        borderBottomRightRadius:0\n\n                    }}\n                ></div>\n                <div\n                    style={{\n                        width:this.props.rect.height,\n                        height: \"4px\",\n                        background:\"white\",\n                        marginBottom:10\n                    }}\n                ></div>\n                <div><button className=\"changeButton\" >+</button></div>\n                <div><button className=\"changeButton\" >-</button></div>\n            </div>\n        );\n    }\n\n    checkColor = () => {\n        if( this.props.rect.isSorted ){\n            return \"#77d65c\";\n        } else if( this.props.rect.isSorting ){\n            return \"#d9200f\";\n        } else{\n            return \"white\"\n        }\n    }\n}\n\nexport default Rect;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div className=\"d-flex justify-content-center align-items-end\">\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rectidx}\n                            rect={rect}\n                        />\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Rects;","export function bubbleSort2(rects ){\n    const pairs = [];\n    const num  = rects.length;\n    const prevRect = rects.slice();\n\n    for( let i = 0; i<num; i++ ){\n        for( let j = i+1;j<num;j++ ){\n            if( prevRect[i].width>prevRect[j].width ){\n                const recti = {...prevRect[i]};\n                const rectj = {...prevRect[j]};\n                prevRect[j] = recti;\n                prevRect[i] = rectj;\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:false\n                });\n            }\n            if( j === num-1 ){\n                pairs.push( {\n                    xx:i,\n                    yy:i,\n                    changed:false\n                });\n            }\n        }\n    }\n    return pairs;\n}\n\nexport function selectionSort(arr) {\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    // One by one move boundary of unsorted subarray\n    for (let i = 0; i < n-1; i++)\n    {\n        let min_idx = i;\n        for (let j = i+1; j < n; j++){\n            pairs.push( {\n                xx:min_idx,\n                yy:j,\n                changed:false\n            } );\n            if (prevRect[j].width < prevRect[min_idx].width){\n                min_idx = j;\n            }\n        }\n\n        // Swap the found minimum element with the first\n        // element\n        const recti = {...prevRect[i]};\n        const rectj = {...prevRect[min_idx]};\n        prevRect[min_idx] = recti;\n        prevRect[i] = rectj;\n        pairs.push( {\n            xx:min_idx,\n            yy:i,\n            changed:true\n        } );\n        pairs.push( {\n            xx:i,\n            yy:i,\n            changed:false\n        });\n    }\n    pairs.push({\n            xx:n-1,\n            yy:n-1,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function bubbleSort(arr){\n    const pairs= [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 0; i < n-1; i++){\n        for (let j = 0; j < n-i-1; j++){\n            if (prevRect[j].width > prevRect[j+1].width) {\n                // swap arr[j+1] and arr[j]\n                const recti = {...prevRect[j]};\n                const rectj = {...prevRect[j+1]};\n                prevRect[j+1] = recti;\n                prevRect[j] = rectj;\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:false\n                } );\n            }\n            if( j === n-i-2 ){\n                pairs.push( {\n                    xx:n-i-1,\n                    yy:n-i-1,\n                    changed:false\n                } );\n            }\n        }\n    }\n    pairs.push({\n            xx:0,\n            yy:0,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function insertionSort(arr){\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 1; i < n; ++i) {\n        let key = prevRect[i].width;\n        let j = i - 1;\n\n        while (j >= 0 && prevRect[j].width > key) {\n            const recti = {...prevRect[j]};\n            const rectj = {...prevRect[j+1]};\n            prevRect[j+1] = recti;\n            prevRect[j] = rectj;\n            pairs.push( {\n                xx:j,\n                yy:j+1,\n                changed:true\n            } );\n            j = j - 1;\n        }\n       // arr[j + 1] = arr[i];\n    }\n    for(let i=0;i<n;i++){\n        pairs.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return pairs;\n}","let values = [];\n\nexport function quickSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n    // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    quick(rects,0,sz);\n    for(var i=0;i<=sz;i++){\n        values.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return values;\n}\n\n\nfunction getPartition(rects, left, right){\n    let pivot = rects[right].width\n    let it = left-1;\n    for(var j=left;j<=right-1;j++){\n        if( rects[j].width< pivot){\n            it++;\n            if( it!==j ){\n                // swap(rects[it],rects[j];\n                const rect1 = {...rects[it]};\n                const rect2 = {...rects[j]};\n                rects[it] = rect2;\n                rects[j] = rect1;\n                values.push({\n                    xx:it,\n                    yy:j,\n                    changed:true\n                })\n            }\n        }\n    }\n    if( it+1!==right ){\n        const rect1 = {...rects[it+1]};\n        const rect2 = {...rects[right]};\n        rects[it+1] = rect2;\n        rects[right] = rect1;\n        values.push({\n            xx:it+1,\n            yy:right,\n            changed:true\n        })\n    }\n    return it+1;\n}\nfunction quick(rects,left,right){\n    if( left>=right ) return ;\n    const partition = getPartition(rects,left,right);\n    quick(rects,left,partition-1);\n    quick(rects,partition+1,right);\n}","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n        <nav class=\"navbar navbar-light\">\n          <div className=\"container-fluid\">\n            <div className=\"navbar-brand\">\n              <span>Bubble Sort</span>\n            </div>\n          </div>\n          </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n            <Typography id=\"discrete-slider-text\" gutterBottom>\n                {props.title}\n            </Typography>\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.disable}\n            />\n            \n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\n\nclass Menu1 extends Component {\n    render() {\n        return (\n            <div id=\"menu1\">\n            <div className=\"d-flex justify-content-between\">\n                <div id=\"indication\">\n                    <div className=\"d-flex flex-row\">\n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box1\"></div><h5>Unsorted</h5></div> \n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box2\"></div><h5>Comparing</h5></div>\n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box3\"></div><h5>Sorted</h5></div>\n                    </div>\n                </div>  \n                <div></div>\n                <div></div>\n                <div></div>\n                <div id=\"sizeSlider\">\n                <DiscreteSlider\n                    default={25}\n                    min={5}\n                    max={50}\n                    step={5}\n                    title=\"Size\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                </div>\n                <div></div>              \n            </div>\n            \n            </div>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu1;","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\n\nclass Menu2 extends Component {\n    render() {\n        return (\n            <div id=\"menu2\">\n            <div className=\"d-flex justify-content-around\">\n                <div></div>\n                <button\n                    className='btn btn-info'\n                    onClick={this.props.onRandomize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Random\n                </button>\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Sort\n                </button>\n                <DiscreteSlider\n                    default={50}\n                    min={0}\n                    max={100}\n                    step={5}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                    disable={false}\n                />\n                <div></div>\n                </div>\n\n            \n        </div>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu2;","import React, { Component } from 'react';\nimport Rect from \"./rect\";\nimport Rects from \"./rects\";\nimport { bubbleSort, selectionSort, insertionSort } from \"./sortingAlgorithms\";\nimport { quickSort } from \"./quickSort\";\nimport Navbar from \"./navbar\";\nimport Menu1 from \"./menu1\";\nimport Menu2 from \"./menu2\";\n\nclass Sort extends Component {\n    state = {\n        count: 30,\n        rects: [],\n        rects2: [],\n        doubles: false,\n        speed: 50,\n        isRunning: false,\n        isRunning1: false,\n        isRunning2: false,\n        algo1: 0,\n        algo2: 0\n    }\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n        const rect = getInitialRects(this.state.count);\n        const rect2 = rect.slice();\n        this.setState({ rects: rect, rects2: rect2 });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n            <Navbar/>\n            <Menu1\n                disable={this.state.isRunning}\n                onDoubleChange={this.handleDouble}\n                onViusalize={this.handleSort}\n                onRandomize={this.handleRandomize}\n                onRefresh={this.handleRefresh}\n                onCountChange={this.handleCountChange}\n                onAlgoChanged={this.handleAlgoChanged}\n                onSpeedChange={this.handleSpeedChanged}\n            />\n            <div className=' d-flex justify-content-center'id=\"bars\">\n\n                <Rects\n                    rects={this.state.rects}\n                />\n                { this.state.doubles && <hr style={{width:\"90%\"}}/>}\n                { this.state.doubles &&\n                <Rects\n                    rects={this.state.rects2}\n                /> }\n            </div>\n            <Menu2\n                disable={this.state.isRunning}\n                onDoubleChange={this.handleDouble}\n                onViusalize={this.handleSort}\n                onRandomize={this.handleRandomize}\n                onRefresh={this.handleRefresh}\n                onCountChange={this.handleCountChange}\n                onAlgoChanged={this.handleAlgoChanged}\n                onSpeedChange={this.handleSpeedChanged}\n            />\n        </React.Fragment>\n        );\n    }\n    handleRandomize = () => {\n        const rect = getInitialRects(this.state.count);\n        const rect2 = rect.slice();\n        this.setState({ rects: rect, rects2: rect2 });\n    }\n    handleRefresh = () => {\n        const rects = this.state.rects;\n        for (let i = 0; i < rects.length; i++) {\n            const rect = { ...rects[i], isSorted: false, isSorting: false }\n            rects[i] = rect;\n        }\n        const rects2 = rects.slice();\n        this.setState({ rects, rects2 });\n    }\n\n    handleDouble = (val) => {\n        this.setState({ doubles: val });\n    }\n    handleCountChange = (val) => {\n        this.setState({ count: val });\n        this.handleRandomize();\n    }\n    handleAlgoChanged = (pos, val) => {\n        if (pos === 0) {\n            this.setState({ algo1: val });\n        } else {\n            this.setState({ algo2: val });\n        }\n    }\n    handleSpeedChanged = (val) => {\n        const speed = (150 - val);\n        this.setState({ speed });\n    }\n    handleSort = () => {\n\n        this.setState({ isRunning: true });\n        let steps1;\n        switch (this.state.algo1) {\n            case 0:\n                steps1 = bubbleSort(this.state.rects);\n                break;\n            case 1:\n                steps1 = selectionSort(this.state.rects);\n                break;\n            case 2:\n                steps1 = insertionSort(this.state.rects);\n                break;\n            case 3:\n                steps1 = quickSort(this.state.rects2);\n                console.log(steps1)\n                break;\n            default:\n                steps1 = bubbleSort(this.state.rects);\n                break;\n        }\n        let steps2;\n        if (this.state.doubles) {\n\n            switch (this.state.algo2) {\n                case 0:\n                    steps2 = bubbleSort(this.state.rects2);\n                    break;\n                case 1:\n                    steps2 = selectionSort(this.state.rects2);\n                    break;\n                case 2:\n                    steps2 = insertionSort(this.state.rects2);\n                    break;\n                case 3:\n                    steps2 = quickSort(this.state.rects2);\n                    break;\n                default:\n                    steps2 = bubbleSort(this.state.rects2);\n                    break;\n            }\n\n        }\n        this.handleFirst(steps1);\n        if (this.state.doubles) this.handleSecond(steps2);\n    }\n    handleFirst = async (steps) => {\n        // console.log(\"fsdfsdfsdfasdf\");\n        this.setState({ isRunning1: true });\n        const { speed } = this.state;\n        // const steps = bubbleSort(this.state.rects);\n        //  console.log(steps.length);\n        const prevRect = this.state.rects;\n        for (let i = 0; i < steps.length; i++) {\n            //   setTimeout(()=>{\n            if (i !== 0) {\n                prevRect[steps[i - 1].xx] = { ...prevRect[steps[i - 1].xx], isSorting: false };\n                prevRect[steps[i - 1].yy] = { ...prevRect[steps[i - 1].yy], isSorting: false };\n            }\n            if (steps[i].xx === steps[i].yy) {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorted: true, isSorting: false };\n            } else if (steps[i].changed) {\n                const recti = { ...prevRect[steps[i].xx], isSorting: true };\n                const rectj = { ...prevRect[steps[i].yy], isSorting: true };\n                prevRect[steps[i].yy] = recti;\n                prevRect[steps[i].xx] = rectj;\n            } else {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorting: true };\n                prevRect[steps[i].yy] = { ...prevRect[steps[i].yy], isSorting: true };\n            }\n            if (i === steps.length - 1) {\n                this.setState({ isRunning1: false });\n                if (this.state.isRunning2 === false) {\n                    this.setState({ isRunning: false });\n                }\n            }\n            /* if( i === (steps.length)-2 ){\n                 this.setState({isRunning1:false});\n                 if( this.state.isRunning2 === false ){\n                     this.setState({isRunning:false});\n                 }\n                 prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                 prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n             }*/\n            this.setState({ rects: prevRect });\n            await sleep(this.state.speed);\n            // },i*speed);\n        }\n    }\n    handleSecond = async (steps) => {\n        const { speed } = this.state;\n        this.setState({ isRunning2: true });\n        const prevRect = this.state.rects2;\n        for (let i = 0; i < steps.length; i++) {\n            //   setTimeout(()=>{\n            if (i !== 0) {\n                prevRect[steps[i - 1].xx] = { ...prevRect[steps[i - 1].xx], isSorting: false };\n                prevRect[steps[i - 1].yy] = { ...prevRect[steps[i - 1].yy], isSorting: false };\n            }\n            if (steps[i].xx === steps[i].yy) {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorted: true, isSorting: false };\n            } else if (steps[i].changed) {\n                const recti = { ...prevRect[steps[i].xx], isSorting: true };\n                const rectj = { ...prevRect[steps[i].yy], isSorting: true };\n                prevRect[steps[i].yy] = recti;\n                prevRect[steps[i].xx] = rectj;\n            } else {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorting: true };\n                prevRect[steps[i].yy] = { ...prevRect[steps[i].yy], isSorting: true };\n            }\n            if (i === steps.length - 1) {\n                this.setState({ isRunning2: false });\n                if (this.state.isRunning1 === false) {\n                    this.setState({ isRunning: false });\n                }\n            }\n            /* if( i === (steps.length)-2 ){\n                 prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                 prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n                 this.setState({isRunning2:false});\n                 if( this.state.isRunning1 === false ){\n                     this.setState({isRunning:false});\n                 }\n             }*/\n            this.setState({ rects2: prevRect });\n            await sleep(this.state.speed);\n            // },i*speed);\n        }\n    }\n\n\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for (let i = 0; i < tot; i++) {\n        rects.push(getRect());\n    }\n    return rects;\n}\nconst getRect = () => {\n    return {\n        width: Math.floor(Math.random() * 200) + 50,\n        isSorted: false,\n        isSorting: false\n    }\n}\nexport default Sort;","import React, {Component} from 'react';\nimport './style.css';\nclass Rect extends Component {\n\n    render() {\n        return (\n            <div>\n                <div\n                    className='rect'\n                    style={{height:this.props.rect.width,\n                        background:this.checkColor(),\n                        margin:this.props.marg,\n                        borderTopLeftRadius:5,\n                        borderTopRightRadius:5,\n                        borderBottomLeftRadius:0,\n                        borderBottomRightRadius:0\n\n                    }}\n                ></div>\n                <div\n                    style={{\n                        width:this.props.rect.height,\n                        height: \"4px\",\n                        background:\"white\",\n                        marginBottom:10\n                    }}\n                ></div>\n                <div><button className=\"changeButton\" >+</button></div>\n                <div><button className=\"changeButton\" >-</button></div>\n            </div>\n        );\n    }\n\n    checkColor = () => {\n        if( this.props.rect.isSorted ){\n            return \"#77d65c\";\n        } else if( this.props.rect.isSorting ){\n            return \"#d9200f\";\n        } else{\n            return \"white\"\n        }\n    }\n}\n\nexport default Rect;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div className=\"d-flex justify-content-center align-items-end\">\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rectidx}\n                            rect={rect}\n                        />\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Rects;","export function bubbleSort2(rects ){\n    const pairs = [];\n    const num  = rects.length;\n    const prevRect = rects.slice();\n\n    for( let i = 0; i<num; i++ ){\n        for( let j = i+1;j<num;j++ ){\n            if( prevRect[i].width>prevRect[j].width ){\n                const recti = {...prevRect[i]};\n                const rectj = {...prevRect[j]};\n                prevRect[j] = recti;\n                prevRect[i] = rectj;\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:false\n                });\n            }\n            if( j === num-1 ){\n                pairs.push( {\n                    xx:i,\n                    yy:i,\n                    changed:false\n                });\n            }\n        }\n    }\n    return pairs;\n}\n\nexport function selectionSort(arr) {\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    // One by one move boundary of unsorted subarray\n    for (let i = 0; i < n-1; i++)\n    {\n        let min_idx = i;\n        for (let j = i+1; j < n; j++){\n            pairs.push( {\n                xx:min_idx,\n                yy:j,\n                changed:false\n            } );\n            if (prevRect[j].width < prevRect[min_idx].width){\n                min_idx = j;\n            }\n        }\n\n        // Swap the found minimum element with the first\n        // element\n        const recti = {...prevRect[i]};\n        const rectj = {...prevRect[min_idx]};\n        prevRect[min_idx] = recti;\n        prevRect[i] = rectj;\n        pairs.push( {\n            xx:min_idx,\n            yy:i,\n            changed:true\n        } );\n        pairs.push( {\n            xx:i,\n            yy:i,\n            changed:false\n        });\n    }\n    pairs.push({\n            xx:n-1,\n            yy:n-1,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function bubbleSort(arr){\n    const pairs= [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 0; i < n-1; i++){\n        for (let j = 0; j < n-i-1; j++){\n            if (prevRect[j].width > prevRect[j+1].width) {\n                // swap arr[j+1] and arr[j]\n                const recti = {...prevRect[j]};\n                const rectj = {...prevRect[j+1]};\n                prevRect[j+1] = recti;\n                prevRect[j] = rectj;\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:false\n                } );\n            }\n            if( j === n-i-2 ){\n                pairs.push( {\n                    xx:n-i-1,\n                    yy:n-i-1,\n                    changed:false\n                } );\n            }\n        }\n    }\n    pairs.push({\n            xx:0,\n            yy:0,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function insertionSort(arr){\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 1; i < n; ++i) {\n        let key = prevRect[i].width;\n        let j = i - 1;\n\n        while (j >= 0 && prevRect[j].width > key) {\n            const recti = {...prevRect[j]};\n            const rectj = {...prevRect[j+1]};\n            prevRect[j+1] = recti;\n            prevRect[j] = rectj;\n            pairs.push( {\n                xx:j,\n                yy:j+1,\n                changed:true\n            } );\n            j = j - 1;\n        }\n       // arr[j + 1] = arr[i];\n    }\n    for(let i=0;i<n;i++){\n        pairs.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return pairs;\n}","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav class=\"navbar navbar-light\">\n          <div className=\"container-fluid\">\n            <div className=\"navbar-brand\">\n              <span>Selection Sort</span>\n            </div>\n          </div>\n          </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n            <Typography id=\"discrete-slider-text\" gutterBottom>\n                {props.title}\n            </Typography>\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.disable}\n            />\n            \n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\n\nclass Menu1 extends Component {\n    render() {\n        return (\n            <div id=\"menu1\">\n            <div className=\"d-flex justify-content-between\">\n                <div id=\"indication\">\n                    <div className=\"d-flex flex-row\">\n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box1\"></div><h5>Unsorted</h5></div> \n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box2\"></div><h5>Comparing</h5></div>\n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box3\"></div><h5>Sorted</h5></div>\n                    </div>\n                </div>  \n                <div></div>\n                <div></div>\n                <div></div>\n                <div id=\"sizeSlider\">\n                <DiscreteSlider\n                    default={25}\n                    min={5}\n                    max={50}\n                    step={5}\n                    title=\"Size\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                </div>\n                <div></div>              \n            </div>\n            \n            </div>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu1;","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\n\nclass Menu2 extends Component {\n    render() {\n        return (\n            <div id=\"menu2\">\n            <div className=\"d-flex justify-content-around\">\n                <div></div>\n                <button\n                    className='btn btn-info'\n                    onClick={this.props.onRandomize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Random\n                </button>\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Sort\n                </button>\n                <DiscreteSlider\n                    default={50}\n                    min={0}\n                    max={100}\n                    step={5}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                    disable={false}\n                />\n                <div></div>\n                </div>\n\n            \n        </div>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu2;","import React, { Component } from 'react';\nimport Rect from \"./rect\";\nimport Rects from \"./rects\";\nimport { bubbleSort, selectionSort, insertionSort } from \"./sortingAlgorithms\";\nimport { quickSort } from \"./quickSort\";\nimport Navbar from \"./navbar\";\nimport Menu1 from \"./menu1\";\nimport Menu2 from \"./menu2\";\n\nclass Sort extends Component {\n    state = {\n        count: 30,\n        rects: [],\n        rects2: [],\n        doubles: false,\n        speed: 50,\n        isRunning: false,\n        isRunning1: false,\n        isRunning2: false,\n        algo1: 0,\n        algo2: 0\n    }\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n        const rect = getInitialRects(this.state.count);\n        const rect2 = rect.slice();\n        this.setState({ rects: rect, rects2: rect2 });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n            <Navbar/>\n            <Menu1\n                disable={this.state.isRunning}\n                onDoubleChange={this.handleDouble}\n                onViusalize={this.handleSort}\n                onRandomize={this.handleRandomize}\n                onRefresh={this.handleRefresh}\n                onCountChange={this.handleCountChange}\n                onAlgoChanged={this.handleAlgoChanged}\n                onSpeedChange={this.handleSpeedChanged}\n            />\n            <div className=' d-flex justify-content-center'id=\"bars\">\n\n                <Rects\n                    rects={this.state.rects}\n                />\n                { this.state.doubles && <hr style={{width:\"90%\"}}/>}\n                { this.state.doubles &&\n                <Rects\n                    rects={this.state.rects2}\n                /> }\n            </div>\n            <Menu2\n                disable={this.state.isRunning}\n                onDoubleChange={this.handleDouble}\n                onViusalize={this.handleSort}\n                onRandomize={this.handleRandomize}\n                onRefresh={this.handleRefresh}\n                onCountChange={this.handleCountChange}\n                onAlgoChanged={this.handleAlgoChanged}\n                onSpeedChange={this.handleSpeedChanged}\n            />\n        </React.Fragment>\n        );\n    }\n    handleRandomize = () => {\n        const rect = getInitialRects(this.state.count);\n        const rect2 = rect.slice();\n        this.setState({ rects: rect, rects2: rect2 });\n    }\n    handleRefresh = () => {\n        const rects = this.state.rects;\n        for (let i = 0; i < rects.length; i++) {\n            const rect = { ...rects[i], isSorted: false, isSorting: false }\n            rects[i] = rect;\n        }\n        const rects2 = rects.slice();\n        this.setState({ rects, rects2 });\n    }\n\n    handleDouble = (val) => {\n        this.setState({ doubles: val });\n    }\n    handleCountChange = (val) => {\n        this.setState({ count: val });\n        this.handleRandomize();\n    }\n    handleAlgoChanged = (pos, val) => {\n        if (pos === 0) {\n            this.setState({ algo1: val });\n        } else {\n            this.setState({ algo2: val });\n        }\n    }\n    handleSpeedChanged = (val) => {\n        const speed = (150 - val);\n        this.setState({ speed });\n    }\n    handleSort = () => {\n\n        this.setState({ isRunning: true });\n        let steps1 = selectionSort(this.state.rects);\n        let steps2 = selectionSort(this.state.rects2);\n\n        this.handleFirst(steps1);\n        if (this.state.doubles) this.handleSecond(steps2);\n    }\n    handleFirst = async (steps) => {\n        // console.log(\"fsdfsdfsdfasdf\");\n        this.setState({ isRunning1: true });\n        const { speed } = this.state;\n        // const steps = bubbleSort(this.state.rects);\n        //  console.log(steps.length);\n        const prevRect = this.state.rects;\n        for (let i = 0; i < steps.length; i++) {\n            //   setTimeout(()=>{\n            if (i !== 0) {\n                prevRect[steps[i - 1].xx] = { ...prevRect[steps[i - 1].xx], isSorting: false };\n                prevRect[steps[i - 1].yy] = { ...prevRect[steps[i - 1].yy], isSorting: false };\n            }\n            if (steps[i].xx === steps[i].yy) {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorted: true, isSorting: false };\n            } else if (steps[i].changed) {\n                const recti = { ...prevRect[steps[i].xx], isSorting: true };\n                const rectj = { ...prevRect[steps[i].yy], isSorting: true };\n                prevRect[steps[i].yy] = recti;\n                prevRect[steps[i].xx] = rectj;\n            } else {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorting: true };\n                prevRect[steps[i].yy] = { ...prevRect[steps[i].yy], isSorting: true };\n            }\n            if (i === steps.length - 1) {\n                this.setState({ isRunning1: false });\n                if (this.state.isRunning2 === false) {\n                    this.setState({ isRunning: false });\n                }\n            }\n            /* if( i === (steps.length)-2 ){\n                 this.setState({isRunning1:false});\n                 if( this.state.isRunning2 === false ){\n                     this.setState({isRunning:false});\n                 }\n                 prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                 prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n             }*/\n            this.setState({ rects: prevRect });\n            await sleep(this.state.speed);\n            // },i*speed);\n        }\n    }\n    handleSecond = async (steps) => {\n        const { speed } = this.state;\n        this.setState({ isRunning2: true });\n        const prevRect = this.state.rects2;\n        for (let i = 0; i < steps.length; i++) {\n            //   setTimeout(()=>{\n            if (i !== 0) {\n                prevRect[steps[i - 1].xx] = { ...prevRect[steps[i - 1].xx], isSorting: false };\n                prevRect[steps[i - 1].yy] = { ...prevRect[steps[i - 1].yy], isSorting: false };\n            }\n            if (steps[i].xx === steps[i].yy) {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorted: true, isSorting: false };\n            } else if (steps[i].changed) {\n                const recti = { ...prevRect[steps[i].xx], isSorting: true };\n                const rectj = { ...prevRect[steps[i].yy], isSorting: true };\n                prevRect[steps[i].yy] = recti;\n                prevRect[steps[i].xx] = rectj;\n            } else {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorting: true };\n                prevRect[steps[i].yy] = { ...prevRect[steps[i].yy], isSorting: true };\n            }\n            if (i === steps.length - 1) {\n                this.setState({ isRunning2: false });\n                if (this.state.isRunning1 === false) {\n                    this.setState({ isRunning: false });\n                }\n            }\n            /* if( i === (steps.length)-2 ){\n                 prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                 prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n                 this.setState({isRunning2:false});\n                 if( this.state.isRunning1 === false ){\n                     this.setState({isRunning:false});\n                 }\n             }*/\n            this.setState({ rects2: prevRect });\n            await sleep(this.state.speed);\n            // },i*speed);\n        }\n    }\n\n\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for (let i = 0; i < tot; i++) {\n        rects.push(getRect());\n    }\n    return rects;\n}\nconst getRect = () => {\n    return {\n        width: Math.floor(Math.random() * 200) + 50,\n        isSorted: false,\n        isSorting: false\n    }\n}\nexport default Sort;","import React, {Component} from 'react';\nimport './style.css';\nclass Rect extends Component {\n\n    render() {\n        return (\n            <div>\n                <div\n                    className='rect'\n                    style={{height:this.props.rect.width,\n                        background:this.checkColor(),\n                        margin:this.props.marg,\n                        borderTopLeftRadius:5,\n                        borderTopRightRadius:5,\n                        borderBottomLeftRadius:0,\n                        borderBottomRightRadius:0\n\n                    }}\n                ></div>\n                <div\n                    style={{\n                        width:this.props.rect.height,\n                        height: \"4px\",\n                        background:\"white\",\n                        marginBottom:10\n                    }}\n                ></div>\n                <div><button className=\"changeButton\" >+</button></div>\n                <div><button className=\"changeButton\" >-</button></div>\n            </div>\n        );\n    }\n\n    checkColor = () => {\n        if( this.props.rect.isSorted ){\n            return \"#77d65c\";\n        } else if( this.props.rect.isSorting ){\n            return \"#d9200f\";\n        } else{\n            return \"white\"\n        }\n    }\n}\n\nexport default Rect;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div className=\"d-flex justify-content-center align-items-end\">\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rectidx}\n                            rect={rect}\n                        />\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Rects;","export function bubbleSort2(rects ){\n    const pairs = [];\n    const num  = rects.length;\n    const prevRect = rects.slice();\n\n    for( let i = 0; i<num; i++ ){\n        for( let j = i+1;j<num;j++ ){\n            if( prevRect[i].width>prevRect[j].width ){\n                const recti = {...prevRect[i]};\n                const rectj = {...prevRect[j]};\n                prevRect[j] = recti;\n                prevRect[i] = rectj;\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:false\n                });\n            }\n            if( j === num-1 ){\n                pairs.push( {\n                    xx:i,\n                    yy:i,\n                    changed:false\n                });\n            }\n        }\n    }\n    return pairs;\n}\n\nexport function selectionSort(arr) {\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    // One by one move boundary of unsorted subarray\n    for (let i = 0; i < n-1; i++)\n    {\n        let min_idx = i;\n        for (let j = i+1; j < n; j++){\n            pairs.push( {\n                xx:min_idx,\n                yy:j,\n                changed:false\n            } );\n            if (prevRect[j].width < prevRect[min_idx].width){\n                min_idx = j;\n            }\n        }\n\n        // Swap the found minimum element with the first\n        // element\n        const recti = {...prevRect[i]};\n        const rectj = {...prevRect[min_idx]};\n        prevRect[min_idx] = recti;\n        prevRect[i] = rectj;\n        pairs.push( {\n            xx:min_idx,\n            yy:i,\n            changed:true\n        } );\n        pairs.push( {\n            xx:i,\n            yy:i,\n            changed:false\n        });\n    }\n    pairs.push({\n            xx:n-1,\n            yy:n-1,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function bubbleSort(arr){\n    const pairs= [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 0; i < n-1; i++){\n        for (let j = 0; j < n-i-1; j++){\n            if (prevRect[j].width > prevRect[j+1].width) {\n                // swap arr[j+1] and arr[j]\n                const recti = {...prevRect[j]};\n                const rectj = {...prevRect[j+1]};\n                prevRect[j+1] = recti;\n                prevRect[j] = rectj;\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:false\n                } );\n            }\n            if( j === n-i-2 ){\n                pairs.push( {\n                    xx:n-i-1,\n                    yy:n-i-1,\n                    changed:false\n                } );\n            }\n        }\n    }\n    pairs.push({\n            xx:0,\n            yy:0,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function insertionSort(arr){\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 1; i < n; ++i) {\n        let key = prevRect[i].width;\n        let j = i - 1;\n\n        while (j >= 0 && prevRect[j].width > key) {\n            const recti = {...prevRect[j]};\n            const rectj = {...prevRect[j+1]};\n            prevRect[j+1] = recti;\n            prevRect[j] = rectj;\n            pairs.push( {\n                xx:j,\n                yy:j+1,\n                changed:true\n            } );\n            j = j - 1;\n        }\n       // arr[j + 1] = arr[i];\n    }\n    for(let i=0;i<n;i++){\n        pairs.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return pairs;\n}","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav class=\"navbar navbar-light\">\n          <div className=\"container-fluid\">\n            <div className=\"navbar-brand\">\n              <span>Insertion Sort</span>\n            </div>\n          </div>\n          </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n            <Typography id=\"discrete-slider-text\" gutterBottom>\n                {props.title}\n            </Typography>\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.disable}\n            />\n            \n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\n\nclass Menu1 extends Component {\n    render() {\n        return (\n            <div id=\"menu1\">\n            <div className=\"d-flex justify-content-between\">\n                <div id=\"indication\">\n                    <div className=\"d-flex flex-row\">\n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box1\"></div><h5>Unsorted</h5></div> \n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box2\"></div><h5>Comparing</h5></div>\n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box3\"></div><h5>Sorted</h5></div>\n                    </div>\n                </div>  \n                <div></div>\n                <div></div>\n                <div></div>\n                <div id=\"sizeSlider\">\n                <DiscreteSlider\n                    default={25}\n                    min={5}\n                    max={50}\n                    step={5}\n                    title=\"Size\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                </div>\n                <div></div>              \n            </div>\n            \n            </div>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu1;","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\n\nclass Menu2 extends Component {\n    render() {\n        return (\n            <div id=\"menu2\">\n            <div className=\"d-flex justify-content-around\">\n                <div></div>\n                <button\n                    className='btn btn-info'\n                    onClick={this.props.onRandomize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Random\n                </button>\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Sort\n                </button>\n                <DiscreteSlider\n                    default={50}\n                    min={0}\n                    max={100}\n                    step={5}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                    disable={false}\n                />\n                <div></div>\n                </div>\n\n            \n        </div>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu2;","import React, { Component } from 'react';\nimport Rect from \"./rect\";\nimport Rects from \"./rects\";\nimport { bubbleSort, selectionSort, insertionSort } from \"./sortingAlgorithms\";\nimport { quickSort } from \"./quickSort\";\nimport Navbar from \"./navbar\";\nimport Menu1 from \"./menu1\";\nimport Menu2 from \"./menu2\";\n\nclass Sort extends Component {\n    state = {\n        count: 30,\n        rects: [],\n        rects2: [],\n        doubles: false,\n        speed: 50,\n        isRunning: false,\n        isRunning1: false,\n        isRunning2: false,\n        algo1: 0,\n        algo2: 0\n    }\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n        const rect = getInitialRects(this.state.count);\n        const rect2 = rect.slice();\n        this.setState({ rects: rect, rects2: rect2 });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n            <Navbar/>\n            <Menu1\n                disable={this.state.isRunning}\n                onDoubleChange={this.handleDouble}\n                onViusalize={this.handleSort}\n                onRandomize={this.handleRandomize}\n                onRefresh={this.handleRefresh}\n                onCountChange={this.handleCountChange}\n                onAlgoChanged={this.handleAlgoChanged}\n                onSpeedChange={this.handleSpeedChanged}\n            />\n            <div className=' d-flex justify-content-center'id=\"bars\">\n\n                <Rects\n                    rects={this.state.rects}\n                />\n                { this.state.doubles && <hr style={{width:\"90%\"}}/>}\n                { this.state.doubles &&\n                <Rects\n                    rects={this.state.rects2}\n                /> }\n            </div>\n            <Menu2\n                disable={this.state.isRunning}\n                onDoubleChange={this.handleDouble}\n                onViusalize={this.handleSort}\n                onRandomize={this.handleRandomize}\n                onRefresh={this.handleRefresh}\n                onCountChange={this.handleCountChange}\n                onAlgoChanged={this.handleAlgoChanged}\n                onSpeedChange={this.handleSpeedChanged}\n            />\n        </React.Fragment>\n        );\n    }\n    handleRandomize = () => {\n        const rect = getInitialRects(this.state.count);\n        const rect2 = rect.slice();\n        this.setState({ rects: rect, rects2: rect2 });\n    }\n    handleRefresh = () => {\n        const rects = this.state.rects;\n        for (let i = 0; i < rects.length; i++) {\n            const rect = { ...rects[i], isSorted: false, isSorting: false }\n            rects[i] = rect;\n        }\n        const rects2 = rects.slice();\n        this.setState({ rects, rects2 });\n    }\n\n    handleDouble = (val) => {\n        this.setState({ doubles: val });\n    }\n    handleCountChange = (val) => {\n        this.setState({ count: val });\n        this.handleRandomize();\n    }\n    handleAlgoChanged = (pos, val) => {\n        if (pos === 0) {\n            this.setState({ algo1: val });\n        } else {\n            this.setState({ algo2: val });\n        }\n    }\n    handleSpeedChanged = (val) => {\n        const speed = (150 - val);\n        this.setState({ speed });\n    }\n    handleSort = () => {\n\n        this.setState({ isRunning: true });\n        let steps1 = insertionSort(this.state.rects);\n\n        let steps2 = insertionSort(this.state.rects);\n\n        this.handleFirst(steps1);\n        if (this.state.doubles) this.handleSecond(steps2);\n    }\n    handleFirst = async (steps) => {\n        // console.log(\"fsdfsdfsdfasdf\");\n        this.setState({ isRunning1: true });\n        const { speed } = this.state;\n        // const steps = bubbleSort(this.state.rects);\n        //  console.log(steps.length);\n        const prevRect = this.state.rects;\n        for (let i = 0; i < steps.length; i++) {\n            //   setTimeout(()=>{\n            if (i !== 0) {\n                prevRect[steps[i - 1].xx] = { ...prevRect[steps[i - 1].xx], isSorting: false };\n                prevRect[steps[i - 1].yy] = { ...prevRect[steps[i - 1].yy], isSorting: false };\n            }\n            if (steps[i].xx === steps[i].yy) {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorted: true, isSorting: false };\n            } else if (steps[i].changed) {\n                const recti = { ...prevRect[steps[i].xx], isSorting: true };\n                const rectj = { ...prevRect[steps[i].yy], isSorting: true };\n                prevRect[steps[i].yy] = recti;\n                prevRect[steps[i].xx] = rectj;\n            } else {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorting: true };\n                prevRect[steps[i].yy] = { ...prevRect[steps[i].yy], isSorting: true };\n            }\n            if (i === steps.length - 1) {\n                this.setState({ isRunning1: false });\n                if (this.state.isRunning2 === false) {\n                    this.setState({ isRunning: false });\n                }\n            }\n            /* if( i === (steps.length)-2 ){\n                 this.setState({isRunning1:false});\n                 if( this.state.isRunning2 === false ){\n                     this.setState({isRunning:false});\n                 }\n                 prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                 prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n             }*/\n            this.setState({ rects: prevRect });\n            await sleep(this.state.speed);\n            // },i*speed);\n        }\n    }\n    handleSecond = async (steps) => {\n        const { speed } = this.state;\n        this.setState({ isRunning2: true });\n        const prevRect = this.state.rects2;\n        for (let i = 0; i < steps.length; i++) {\n            //   setTimeout(()=>{\n            if (i !== 0) {\n                prevRect[steps[i - 1].xx] = { ...prevRect[steps[i - 1].xx], isSorting: false };\n                prevRect[steps[i - 1].yy] = { ...prevRect[steps[i - 1].yy], isSorting: false };\n            }\n            if (steps[i].xx === steps[i].yy) {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorted: true, isSorting: false };\n            } else if (steps[i].changed) {\n                const recti = { ...prevRect[steps[i].xx], isSorting: true };\n                const rectj = { ...prevRect[steps[i].yy], isSorting: true };\n                prevRect[steps[i].yy] = recti;\n                prevRect[steps[i].xx] = rectj;\n            } else {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorting: true };\n                prevRect[steps[i].yy] = { ...prevRect[steps[i].yy], isSorting: true };\n            }\n            if (i === steps.length - 1) {\n                this.setState({ isRunning2: false });\n                if (this.state.isRunning1 === false) {\n                    this.setState({ isRunning: false });\n                }\n            }\n            /* if( i === (steps.length)-2 ){\n                 prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                 prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n                 this.setState({isRunning2:false});\n                 if( this.state.isRunning1 === false ){\n                     this.setState({isRunning:false});\n                 }\n             }*/\n            this.setState({ rects2: prevRect });\n            await sleep(this.state.speed);\n            // },i*speed);\n        }\n    }\n\n\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for (let i = 0; i < tot; i++) {\n        rects.push(getRect());\n    }\n    return rects;\n}\nconst getRect = () => {\n    return {\n        width: Math.floor(Math.random() * 200) + 50,\n        isSorted: false,\n        isSorting: false\n    }\n}\nexport default Sort;","import React, {Component} from 'react';\nimport './style.css';\nclass Rect extends Component {\n\n    render() {\n        return (\n            <div>\n                <div\n                    className='rect'\n                    style={{height:this.props.rect.width,\n                        background:this.checkColor(),\n                        margin:this.props.marg,\n                        borderTopLeftRadius:5,\n                        borderTopRightRadius:5,\n                        borderBottomLeftRadius:0,\n                        borderBottomRightRadius:0\n\n                    }}\n                ></div>\n                <div\n                    style={{\n                        width:this.props.rect.height,\n                        height: \"4px\",\n                        background:\"white\",\n                        marginBottom:10\n                    }}\n                ></div>\n                <div><button className=\"changeButton\" >+</button></div>\n                <div><button className=\"changeButton\" >-</button></div>\n            </div>\n        );\n    }\n\n    checkColor = () => {\n        if( this.props.rect.isSorted ){\n            return \"#77d65c\";\n        } else if( this.props.rect.isSorting ){\n            return \"#d9200f\";\n        } else{\n            return \"white\"\n        }\n    }\n}\n\nexport default Rect;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div className=\"d-flex justify-content-center align-items-end\">\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rectidx}\n                            rect={rect}\n                        />\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Rects;","let values = [];\n\nexport function quickSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n    // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    quick(rects,0,sz);\n    for(var i=0;i<=sz;i++){\n        values.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return values;\n}\n\n\nfunction getPartition(rects, left, right){\n    let pivot = rects[right].width\n    let it = left-1;\n    for(var j=left;j<=right-1;j++){\n        if( rects[j].width< pivot){\n            it++;\n            if( it!==j ){\n                // swap(rects[it],rects[j];\n                const rect1 = {...rects[it]};\n                const rect2 = {...rects[j]};\n                rects[it] = rect2;\n                rects[j] = rect1;\n                values.push({\n                    xx:it,\n                    yy:j,\n                    changed:true\n                })\n            }\n        }\n    }\n    if( it+1!==right ){\n        const rect1 = {...rects[it+1]};\n        const rect2 = {...rects[right]};\n        rects[it+1] = rect2;\n        rects[right] = rect1;\n        values.push({\n            xx:it+1,\n            yy:right,\n            changed:true\n        })\n    }\n    return it+1;\n}\nfunction quick(rects,left,right){\n    if( left>=right ) return ;\n    const partition = getPartition(rects,left,right);\n    quick(rects,left,partition-1);\n    quick(rects,partition+1,right);\n}","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav class=\"navbar navbar-light\">\n          <div className=\"container-fluid\">\n            <div className=\"navbar-brand\">\n              <span>Quick Sort</span>\n            </div>\n          </div>\n          </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n            <Typography id=\"discrete-slider-text\" gutterBottom>\n                {props.title}\n            </Typography>\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.disable}\n            />\n            \n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\n\nclass Menu1 extends Component {\n    render() {\n        return (\n            <div id=\"menu1\">\n            <div className=\"d-flex justify-content-between\">\n                <div id=\"indication\">\n                    <div className=\"d-flex flex-row\">\n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box1\"></div><h5>Unsorted</h5></div> \n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box2\"></div><h5>Comparing</h5></div>\n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box3\"></div><h5>Sorted</h5></div>\n                    </div>\n                </div>  \n                <div></div>\n                <div></div>\n                <div></div>\n                <div id=\"sizeSlider\">\n                <DiscreteSlider\n                    default={25}\n                    min={5}\n                    max={50}\n                    step={5}\n                    title=\"Size\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                </div>\n                <div></div>              \n            </div>\n            \n            </div>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu1;","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\n\nclass Menu2 extends Component {\n    render() {\n        return (\n            <div id=\"menu2\">\n            <div className=\"d-flex justify-content-around\">\n                <div></div>\n                <button\n                    className='btn btn-info'\n                    onClick={this.props.onRandomize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Random\n                </button>\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Sort\n                </button>\n                <DiscreteSlider\n                    default={50}\n                    min={0}\n                    max={100}\n                    step={5}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                    disable={false}\n                />\n                <div></div>\n                </div>\n\n            \n        </div>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu2;","import React, { Component } from 'react';\nimport Rect from \"./rect\";\nimport Rects from \"./rects\";\nimport { bubbleSort, selectionSort, insertionSort } from \"./sortingAlgorithms\";\nimport { quickSort } from \"./quickSort\";\nimport Navbar from \"./navbar\";\nimport Menu1 from \"./menu1\";\nimport Menu2 from \"./menu2\";\n\nclass Sort extends Component {\n    state = {\n        count: 30,\n        rects: [],\n        rects2: [],\n        doubles: false,\n        speed: 50,\n        isRunning: false,\n        isRunning1: false,\n        isRunning2: false,\n        algo1: 0,\n        algo2: 0\n    }\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n        const rect = getInitialRects(this.state.count);\n        const rect2 = rect.slice();\n        this.setState({ rects: rect, rects2: rect2 });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n            <Navbar/>\n            <Menu1\n                disable={this.state.isRunning}\n                onDoubleChange={this.handleDouble}\n                onViusalize={this.handleSort}\n                onRandomize={this.handleRandomize}\n                onRefresh={this.handleRefresh}\n                onCountChange={this.handleCountChange}\n                onAlgoChanged={this.handleAlgoChanged}\n                onSpeedChange={this.handleSpeedChanged}\n            />\n            <div className=' d-flex justify-content-center'id=\"bars\">\n\n                <Rects\n                    rects={this.state.rects}\n                />\n                { this.state.doubles && <hr style={{width:\"90%\"}}/>}\n                { this.state.doubles &&\n                <Rects\n                    rects={this.state.rects2}\n                /> }\n            </div>\n            <Menu2\n                disable={this.state.isRunning}\n                onDoubleChange={this.handleDouble}\n                onViusalize={this.handleSort}\n                onRandomize={this.handleRandomize}\n                onRefresh={this.handleRefresh}\n                onCountChange={this.handleCountChange}\n                onAlgoChanged={this.handleAlgoChanged}\n                onSpeedChange={this.handleSpeedChanged}\n            />\n        </React.Fragment>\n        );\n    }\n    handleRandomize = () => {\n        const rect = getInitialRects(this.state.count);\n        const rect2 = rect.slice();\n        this.setState({ rects: rect, rects2: rect2 });\n    }\n    handleRefresh = () => {\n        const rects = this.state.rects;\n        for (let i = 0; i < rects.length; i++) {\n            const rect = { ...rects[i], isSorted: false, isSorting: false }\n            rects[i] = rect;\n        }\n        const rects2 = rects.slice();\n        this.setState({ rects, rects2 });\n    }\n\n    handleDouble = (val) => {\n        this.setState({ doubles: val });\n    }\n    handleCountChange = (val) => {\n        this.setState({ count: val });\n        this.handleRandomize();\n    }\n    handleAlgoChanged = (pos, val) => {\n        if (pos === 0) {\n            this.setState({ algo1: val });\n        } else {\n            this.setState({ algo2: val });\n        }\n    }\n    handleSpeedChanged = (val) => {\n        const speed = (150 - val);\n        this.setState({ speed });\n    }\n    handleSort = () => {\n\n        this.setState({ isRunning: true });\n        let steps1 = quickSort(this.state.rects2);\n        let steps2 = quickSort(this.state.rects2);\n        this.handleFirst(steps1);\n        if (this.state.doubles) this.handleSecond(steps2);\n    }\n    handleFirst = async (steps) => {\n        // console.log(\"fsdfsdfsdfasdf\");\n        this.setState({ isRunning1: true });\n        const { speed } = this.state;\n        // const steps = bubbleSort(this.state.rects);\n        //  console.log(steps.length);\n        const prevRect = this.state.rects;\n        for (let i = 0; i < steps.length; i++) {\n            //   setTimeout(()=>{\n            if (i !== 0) {\n                prevRect[steps[i - 1].xx] = { ...prevRect[steps[i - 1].xx], isSorting: false };\n                prevRect[steps[i - 1].yy] = { ...prevRect[steps[i - 1].yy], isSorting: false };\n            }\n            if (steps[i].xx === steps[i].yy) {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorted: true, isSorting: false };\n            } else if (steps[i].changed) {\n                const recti = { ...prevRect[steps[i].xx], isSorting: true };\n                const rectj = { ...prevRect[steps[i].yy], isSorting: true };\n                prevRect[steps[i].yy] = recti;\n                prevRect[steps[i].xx] = rectj;\n            } else {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorting: true };\n                prevRect[steps[i].yy] = { ...prevRect[steps[i].yy], isSorting: true };\n            }\n            if (i === steps.length - 1) {\n                this.setState({ isRunning1: false });\n                if (this.state.isRunning2 === false) {\n                    this.setState({ isRunning: false });\n                }\n            }\n            /* if( i === (steps.length)-2 ){\n                 this.setState({isRunning1:false});\n                 if( this.state.isRunning2 === false ){\n                     this.setState({isRunning:false});\n                 }\n                 prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                 prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n             }*/\n            this.setState({ rects: prevRect });\n            await sleep(this.state.speed);\n            // },i*speed);\n        }\n    }\n    handleSecond = async (steps) => {\n        const { speed } = this.state;\n        this.setState({ isRunning2: true });\n        const prevRect = this.state.rects2;\n        for (let i = 0; i < steps.length; i++) {\n            //   setTimeout(()=>{\n            if (i !== 0) {\n                prevRect[steps[i - 1].xx] = { ...prevRect[steps[i - 1].xx], isSorting: false };\n                prevRect[steps[i - 1].yy] = { ...prevRect[steps[i - 1].yy], isSorting: false };\n            }\n            if (steps[i].xx === steps[i].yy) {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorted: true, isSorting: false };\n            } else if (steps[i].changed) {\n                const recti = { ...prevRect[steps[i].xx], isSorting: true };\n                const rectj = { ...prevRect[steps[i].yy], isSorting: true };\n                prevRect[steps[i].yy] = recti;\n                prevRect[steps[i].xx] = rectj;\n            } else {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorting: true };\n                prevRect[steps[i].yy] = { ...prevRect[steps[i].yy], isSorting: true };\n            }\n            if (i === steps.length - 1) {\n                this.setState({ isRunning2: false });\n                if (this.state.isRunning1 === false) {\n                    this.setState({ isRunning: false });\n                }\n            }\n            /* if( i === (steps.length)-2 ){\n                 prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                 prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n                 this.setState({isRunning2:false});\n                 if( this.state.isRunning1 === false ){\n                     this.setState({isRunning:false});\n                 }\n             }*/\n            this.setState({ rects2: prevRect });\n            await sleep(this.state.speed);\n            // },i*speed);\n        }\n    }\n\n\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for (let i = 0; i < tot; i++) {\n        rects.push(getRect());\n    }\n    return rects;\n}\nconst getRect = () => {\n    return {\n        width: Math.floor(Math.random() * 200) + 50,\n        isSorted: false,\n        isSorting: false\n    }\n}\nexport default Sort;","import React, {Component} from 'react';\nimport './style.css';\nclass Rect extends Component {\n\n    render() {\n        return (\n            <div>\n                <div\n                    className='rect'\n                    style={{height:this.props.rect.width,\n                        background:this.checkColor(),\n                        margin:this.props.marg,\n                        borderTopLeftRadius:5,\n                        borderTopRightRadius:5,\n                        borderBottomLeftRadius:0,\n                        borderBottomRightRadius:0\n\n                    }}\n                ></div>\n                <div\n                    style={{\n                        width:this.props.rect.height,\n                        height: \"4px\",\n                        background:\"white\",\n                        marginBottom:10\n                    }}\n                ></div>\n                <div><button className=\"changeButton\" >+</button></div>\n                <div><button className=\"changeButton\" >-</button></div>\n            </div>\n        );\n    }\n\n    checkColor = () => {\n        if( this.props.rect.isSorted ){\n            return \"#77d65c\";\n        } else if( this.props.rect.isSorting ){\n            return \"#d9200f\";\n        } else{\n            return \"white\"\n        }\n    }\n}\n\nexport default Rect;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div className=\"d-flex justify-content-center align-items-end\">\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rectidx}\n                            rect={rect}\n                        />\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Rects;","export function bubbleSort2(rects ){\n    const pairs = [];\n    const num  = rects.length;\n    const prevRect = rects.slice();\n\n    for( let i = 0; i<num; i++ ){\n        for( let j = i+1;j<num;j++ ){\n            if( prevRect[i].width>prevRect[j].width ){\n                const recti = {...prevRect[i]};\n                const rectj = {...prevRect[j]};\n                prevRect[j] = recti;\n                prevRect[i] = rectj;\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:false\n                });\n            }\n            if( j === num-1 ){\n                pairs.push( {\n                    xx:i,\n                    yy:i,\n                    changed:false\n                });\n            }\n        }\n    }\n    return pairs;\n}\n\nexport function selectionSort(arr) {\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    // One by one move boundary of unsorted subarray\n    for (let i = 0; i < n-1; i++)\n    {\n        let min_idx = i;\n        for (let j = i+1; j < n; j++){\n            pairs.push( {\n                xx:min_idx,\n                yy:j,\n                changed:false\n            } );\n            if (prevRect[j].width < prevRect[min_idx].width){\n                min_idx = j;\n            }\n        }\n\n        // Swap the found minimum element with the first\n        // element\n        const recti = {...prevRect[i]};\n        const rectj = {...prevRect[min_idx]};\n        prevRect[min_idx] = recti;\n        prevRect[i] = rectj;\n        pairs.push( {\n            xx:min_idx,\n            yy:i,\n            changed:true\n        } );\n        pairs.push( {\n            xx:i,\n            yy:i,\n            changed:false\n        });\n    }\n    pairs.push({\n            xx:n-1,\n            yy:n-1,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function bubbleSort(arr){\n    const pairs= [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 0; i < n-1; i++){\n        for (let j = 0; j < n-i-1; j++){\n            if (prevRect[j].width > prevRect[j+1].width) {\n                // swap arr[j+1] and arr[j]\n                const recti = {...prevRect[j]};\n                const rectj = {...prevRect[j+1]};\n                prevRect[j+1] = recti;\n                prevRect[j] = rectj;\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:false\n                } );\n            }\n            if( j === n-i-2 ){\n                pairs.push( {\n                    xx:n-i-1,\n                    yy:n-i-1,\n                    changed:false\n                } );\n            }\n        }\n    }\n    pairs.push({\n            xx:0,\n            yy:0,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function insertionSort(arr){\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 1; i < n; ++i) {\n        let key = prevRect[i].width;\n        let j = i - 1;\n\n        while (j >= 0 && prevRect[j].width > key) {\n            const recti = {...prevRect[j]};\n            const rectj = {...prevRect[j+1]};\n            prevRect[j+1] = recti;\n            prevRect[j] = rectj;\n            pairs.push( {\n                xx:j,\n                yy:j+1,\n                changed:true\n            } );\n            j = j - 1;\n        }\n       // arr[j + 1] = arr[i];\n    }\n    for(let i=0;i<n;i++){\n        pairs.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return pairs;\n}","let values = [];\n\nexport function quickSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n    // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    quick(rects,0,sz);\n    for(var i=0;i<=sz;i++){\n        values.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return values;\n}\n\n\nfunction getPartition(rects, left, right){\n    let pivot = rects[right].width\n    let it = left-1;\n    for(var j=left;j<=right-1;j++){\n        if( rects[j].width< pivot){\n            it++;\n            if( it!==j ){\n                // swap(rects[it],rects[j];\n                const rect1 = {...rects[it]};\n                const rect2 = {...rects[j]};\n                rects[it] = rect2;\n                rects[j] = rect1;\n                values.push({\n                    xx:it,\n                    yy:j,\n                    changed:true\n                })\n            }\n        }\n    }\n    if( it+1!==right ){\n        const rect1 = {...rects[it+1]};\n        const rect2 = {...rects[right]};\n        rects[it+1] = rect2;\n        rects[right] = rect1;\n        values.push({\n            xx:it+1,\n            yy:right,\n            changed:true\n        })\n    }\n    return it+1;\n}\nfunction quick(rects,left,right){\n    if( left>=right ) return ;\n    const partition = getPartition(rects,left,right);\n    quick(rects,left,partition-1);\n    quick(rects,partition+1,right);\n}","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n        <nav class=\"navbar navbar-light\">\n          <div className=\"container-fluid\">\n            <div className=\"navbar-brand\">\n              <span>Comparision</span>\n            </div>\n          </div>\n          </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n            <Typography id=\"discrete-slider-text\" gutterBottom>\n                {props.title}\n            </Typography>\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.disable}\n            />\n            \n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state, setState] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n        console.log(state.pos);\n        setAge(event.target.value);\n        props.onAlgoChanged(state.pos,event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={0} style={{selected:true}} >Bubble Sort</MenuItem>\n                    <MenuItem value={1}>Selection Sort</MenuItem>\n                    <MenuItem value={2}>Insertion Sort</MenuItem>\n                    <MenuItem value={3}>Quick Sort</MenuItem>\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 300 + theme.spacing(3) * 2,\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n}));\n\nfunction ValueLabelComponent(props) {\n    const { children, open, value } = props;\n\n    return (\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\n            {children}\n        </Tooltip>\n    );\n}\n\nValueLabelComponent.propTypes = {\n    children: PropTypes.element.isRequired,\n    open: PropTypes.bool.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\n\n\n\nconst AirbnbSlider = withStyles({\n    root: {\n        color: '#3a8589',\n        height: 3,\n        padding: '13px 0',\n    },\n    thumb: {\n        height: 27,\n        width: 27,\n        backgroundColor: '#fff',\n        border: '1px solid currentColor',\n        marginTop: -12,\n        marginLeft: -13,\n        boxShadow: '#ebebeb 0 2px 2px',\n        '&:focus, &:hover, &$active': {\n            boxShadow: '#ccc 0 2px 3px 1px',\n        },\n        '& .bar': {\n            // display: inline-block !important;\n            height: 9,\n            width: 1,\n            backgroundColor: 'currentColor',\n            marginLeft: 1,\n            marginRight: 1,\n        },\n    },\n    active: {},\n    track: {\n        height: 3,\n    },\n    rail: {\n        color: '#ffffff',\n        opacity: 1,\n        height: 3,\n    },\n})(Slider);\n\nfunction AirbnbThumbComponent(props) {\n    return (\n        <span {...props}>\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n      <span className=\"bar\" />\n    </span>\n    );\n}\n\nexport default function CustomizedSlider() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Typography gutterBottom>Airbnb</Typography>\n            <AirbnbSlider\n                ThumbComponent={AirbnbThumbComponent}\n                getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}\n                defaultValue={[20, 40]}\n                valueLabelDisplay=\"on\"\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\n\nconst CSlider = withStyles({\n    root: {\n       // color: \"#ffffff\",\n        height: 3,\n        padding: \"13px 0\",\n    },\n    track: {\n        height: 4,\n        borderRadius: 2,\n    },\n    thumb: {\n        backgroundColor: \"#fff\",\n        //color: \"#fff\",\n    },\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\n\nexport default function RangeSlider(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState([20, 37]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n    };\n    const handleCommit = (event, newValue) => {\n        console.log(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CSlider\n                disabled={props.disable}\n                value={value}\n                onChange={handleChange}\n                onChangeCommitted={handleCommit}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n                valueLabelDisplay=\"on\"\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Value range\n            </Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function SwitchLabels(props) {\n    const [state, setState] = React.useState({\n        checkedA: false,\n    });\n\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        props.onDoubleChange(event.target.checked);\n    };\n\n    return (\n        <FormGroup row>\n            <FormControlLabel\n                control={<Switch checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\n                label=\"Duo\"\n                disabled={props.disable}\n            />\n\n        </FormGroup>\n    );\n}\n","import React, { Component } from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\nimport CustomizedSlider from \"./airBnbSlider\";\nimport RangeSlider from \"./doubleSlider\";\nimport SwitchLabels from \"./formControlLabel\";\n\nclass Menu1 extends Component {\n    render() {\n        return (\n            <div id=\"menu1\">\n            <div className=\"d-flex justify-content-between\">\n                <div id=\"indication\">\n                    <div className=\"d-flex flex-row\">\n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box1\"></div><h5>Unsorted</h5></div> \n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box2\"></div><h5>Comparing</h5></div>\n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box3\"></div><h5>Sorted</h5></div>\n                    </div>\n                </div>  \n                <div></div>\n                                <SimpleSelect\n                    pos={0}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n                <SwitchLabels\n                    disable={this.props.disable}\n                    onDoubleChange={this.props.onDoubleChange}\n                />\n                <SimpleSelect\n                    pos={1}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n                <div></div>\n                <div id=\"sizeSlider\">\n                <DiscreteSlider\n                    default={20}\n                    min={5}\n                    max={25}\n                    step={1}\n                    title=\"Size\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                </div>\n                <div></div>              \n            </div>\n            \n            </div>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu1;","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\n\nclass Menu2 extends Component {\n    render() {\n        return (\n            <div id=\"menu2\">\n            <div className=\"d-flex justify-content-around\">\n                <div></div>\n                <button\n                    className='btn btn-info'\n                    onClick={this.props.onRandomize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Random\n                </button>\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Sort\n                </button>\n                <DiscreteSlider\n                    default={50}\n                    min={0}\n                    max={100}\n                    step={5}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                    disable={false}\n                />\n                <div></div>\n                </div>\n\n            \n        </div>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu2;","import React, { Component } from 'react';\nimport Rect from \"./rect\";\nimport Rects from \"./rects\";\nimport { bubbleSort, selectionSort, insertionSort } from \"./sortingAlgorithms\";\nimport { quickSort } from \"./quickSort\";\nimport Navbar from \"./navbar\";\nimport Menu1 from \"./menu1\";\nimport Menu2 from \"./menu2\";\n\nclass Sort extends Component {\n    state = {\n        count: 30,\n        rects: [],\n        rects2: [],\n        doubles: false,\n        speed: 0,\n        isRunning: false,\n        isRunning1: false,\n        isRunning2: false,\n        algo1: 0,\n        algo2: 0\n    }\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n        const rect = getInitialRects(this.state.count);\n        const rect2 = rect.slice();\n        this.setState({ rects: rect, rects2: rect2 });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n            <Navbar/>\n            <Menu1\n                disable={this.state.isRunning}\n                onDoubleChange={this.handleDouble}\n                onViusalize={this.handleSort}\n                onRandomize={this.handleRandomize}\n                onRefresh={this.handleRefresh}\n                onCountChange={this.handleCountChange}\n                onAlgoChanged={this.handleAlgoChanged}\n                onSpeedChange={this.handleSpeedChanged}\n            />\n            <div className=' d-flex justify-content-center'id=\"bars\">\n\n                <Rects\n                    rects={this.state.rects}\n                />\n                { this.state.doubles && <hr style={{width:\"90%\"}}/>}\n                { this.state.doubles &&\n                <Rects\n                    rects={this.state.rects2}\n                /> }\n            </div>\n            <Menu2\n                disable={this.state.isRunning}\n                onDoubleChange={this.handleDouble}\n                onViusalize={this.handleSort}\n                onRandomize={this.handleRandomize}\n                onRefresh={this.handleRefresh}\n                onCountChange={this.handleCountChange}\n                onAlgoChanged={this.handleAlgoChanged}\n                onSpeedChange={this.handleSpeedChanged}\n            />\n        </React.Fragment>\n        );\n    }\n    handleRandomize = () => {\n        const rect = getInitialRects(this.state.count);\n        const rect2 = rect.slice();\n        this.setState({ rects: rect, rects2: rect2 });\n    }\n    handleRefresh = () => {\n        const rects = this.state.rects;\n        for (let i = 0; i < rects.length; i++) {\n            const rect = { ...rects[i], isSorted: false, isSorting: false }\n            rects[i] = rect;\n        }\n        const rects2 = rects.slice();\n        this.setState({ rects, rects2 });\n    }\n\n    handleDouble = (val) => {\n        this.setState({ doubles: val });\n    }\n    handleCountChange = (val) => {\n        this.setState({ count: val });\n        this.handleRandomize();\n    }\n    handleAlgoChanged = (pos, val) => {\n        if (pos === 0) {\n            this.setState({ algo1: val });\n        } else {\n            this.setState({ algo2: val });\n        }\n    }\n    handleSpeedChanged = (val) => {\n        const speed = (150 - val);\n        this.setState({ speed });\n    }\n    handleSort = () => {\n\n        this.setState({ isRunning: true });\n        let steps1;\n        switch (this.state.algo1) {\n            case 0:\n                steps1 = bubbleSort(this.state.rects);\n                break;\n            case 1:\n                steps1 = selectionSort(this.state.rects);\n                break;\n            case 2:\n                steps1 = insertionSort(this.state.rects);\n                break;\n            case 3:\n                steps1 = quickSort(this.state.rects2);\n                console.log(steps1)\n                break;\n            default:\n                steps1 = bubbleSort(this.state.rects);\n                break;\n        }\n        let steps2;\n        if (this.state.doubles) {\n\n            switch (this.state.algo2) {\n                case 0:\n                    steps2 = bubbleSort(this.state.rects2);\n                    break;\n                case 1:\n                    steps2 = selectionSort(this.state.rects2);\n                    break;\n                case 2:\n                    steps2 = insertionSort(this.state.rects2);\n                    break;\n                case 3:\n                    steps2 = quickSort(this.state.rects2);\n                    break;\n                default:\n                    steps2 = bubbleSort(this.state.rects2);\n                    break;\n            }\n\n        }\n        this.handleFirst(steps1);\n        if (this.state.doubles) this.handleSecond(steps2);\n    }\n    handleFirst = async (steps) => {\n        // console.log(\"fsdfsdfsdfasdf\");\n        this.setState({ isRunning1: true });\n        const { speed } = this.state;\n        // const steps = bubbleSort(this.state.rects);\n        //  console.log(steps.length);\n        const prevRect = this.state.rects;\n        for (let i = 0; i < steps.length; i++) {\n            //   setTimeout(()=>{\n            if (i !== 0) {\n                prevRect[steps[i - 1].xx] = { ...prevRect[steps[i - 1].xx], isSorting: false };\n                prevRect[steps[i - 1].yy] = { ...prevRect[steps[i - 1].yy], isSorting: false };\n            }\n            if (steps[i].xx === steps[i].yy) {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorted: true, isSorting: false };\n            } else if (steps[i].changed) {\n                const recti = { ...prevRect[steps[i].xx], isSorting: true };\n                const rectj = { ...prevRect[steps[i].yy], isSorting: true };\n                prevRect[steps[i].yy] = recti;\n                prevRect[steps[i].xx] = rectj;\n            } else {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorting: true };\n                prevRect[steps[i].yy] = { ...prevRect[steps[i].yy], isSorting: true };\n            }\n            if (i === steps.length - 1) {\n                this.setState({ isRunning1: false });\n                if (this.state.isRunning2 === false) {\n                    this.setState({ isRunning: false });\n                }\n            }\n            /* if( i === (steps.length)-2 ){\n                 this.setState({isRunning1:false});\n                 if( this.state.isRunning2 === false ){\n                     this.setState({isRunning:false});\n                 }\n                 prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                 prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n             }*/\n            this.setState({ rects: prevRect });\n            await sleep(this.state.speed);\n            // },i*speed);\n        }\n    }\n    handleSecond = async (steps) => {\n        const { speed } = this.state;\n        this.setState({ isRunning2: true });\n        const prevRect = this.state.rects2;\n        for (let i = 0; i < steps.length; i++) {\n            //   setTimeout(()=>{\n            if (i !== 0) {\n                prevRect[steps[i - 1].xx] = { ...prevRect[steps[i - 1].xx], isSorting: false };\n                prevRect[steps[i - 1].yy] = { ...prevRect[steps[i - 1].yy], isSorting: false };\n            }\n            if (steps[i].xx === steps[i].yy) {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorted: true, isSorting: false };\n            } else if (steps[i].changed) {\n                const recti = { ...prevRect[steps[i].xx], isSorting: true };\n                const rectj = { ...prevRect[steps[i].yy], isSorting: true };\n                prevRect[steps[i].yy] = recti;\n                prevRect[steps[i].xx] = rectj;\n            } else {\n                prevRect[steps[i].xx] = { ...prevRect[steps[i].xx], isSorting: true };\n                prevRect[steps[i].yy] = { ...prevRect[steps[i].yy], isSorting: true };\n            }\n            if (i === steps.length - 1) {\n                this.setState({ isRunning2: false });\n                if (this.state.isRunning1 === false) {\n                    this.setState({ isRunning: false });\n                }\n            }\n            /* if( i === (steps.length)-2 ){\n                 prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                 prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n                 this.setState({isRunning2:false});\n                 if( this.state.isRunning1 === false ){\n                     this.setState({isRunning:false});\n                 }\n             }*/\n            this.setState({ rects2: prevRect });\n            await sleep(this.state.speed);\n            // },i*speed);\n        }\n    }\n\n\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for (let i = 0; i < tot; i++) {\n        rects.push(getRect());\n    }\n    return rects;\n}\nconst getRect = () => {\n    return {\n        width: Math.floor(Math.random() * 200) + 50,\n        isSorted: false,\n        isSorting: false\n    }\n}\nexport default Sort;","import React, { Component } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./home\";\nimport Bubble from \"./bubbleSort/sort\";\nimport Selection from \"./selectionSort/sort\";\nimport Insertion from \"./insertionSort/sort\";\nimport Quick from \"./quickSort/sort\";\nimport Comparision from \"./comparision/sort\";\n\nclass Sort extends Component {\n  render() {\n    return (\n      <Router basename=\"/sort\">\n        <Switch>\n          <Route path=\"/bubbleSort\" component={Bubble} />\n          <Route path=\"/selectionSort\" component={Selection} />\n          <Route path=\"/insertionSort\" component={Insertion} />\n          <Route path=\"/quickSort\" component={Quick} />\n          <Route path=\"/comparision\" component={Comparision} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default Sort;\n","export default __webpack_public_path__ + \"static/media/queen.a967028b.png\";","import React, {Component} from 'react';\nimport './style.css'\nimport queen from './queen.png';\nclass Cell extends Component {\n    render() {\n        return (\n            <div className={this.getClassName()} style={this.getStyled()}>\n                { this.props.cell.isPresent && <img src={queen} height='100px' style={{padding:\"25px\"}}/> }\n            </div>\n        );\n    }\n    getClassName = ()=>{\n        if(this.props.cell.isAttacked){\n            return \"boardCell attacked\";\n        } else if(this.props.cell.isCurrent){\n            return \"boardCell current\";\n        }else if(this.props.cell.isPresent){\n            return \"boardCell present\";\n        }else if(this.props.cell.isChecked){\n            return \"boardCell checked\";\n        } else{\n            return \"boardCell\";\n        }\n    }\n    getStyled = () =>{\n        if( (this.props.cell.row+this.props.cell.col)%2 === 0 ){\n            return {\n                backgroundColor:\"white\"\n            }\n        }else{\n            return {\n                backgroundColor:\"grey\"\n            }\n        }\n    }\n}\n\nexport default Cell;","import React, {Component} from 'react';\nimport Cell from \"./cell\";\nimport './style.css';\nclass Cells extends Component {\n    render() {\n        return (\n            <div className='booard' id=\"boardID\">\n                {this.props.board.map( (row,rowidx)=>{\n                    return(\n                        <div key={rowidx}>\n                            {row.map( (cell,cellidx)=>{\n                                return(\n                                    <Cell\n                                        key={cellidx}\n                                        cell={cell}/>\n                                );\n                            } )}\n                        </div>\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Cells;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n        <nav class=\"navbar navbar-light\">\n          <div className=\"container-fluid\">\n            <div className=\"navbar-brand\">\n              <span>N-Queen</span>\n            </div>\n          </div>\n          </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.disable}\n            />\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\n\n\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav id=\"navContent\"className=\"d-flex justify-content-around\">\n                <button\n                    className='btn btn-secondary m-2'\n                    onClick={this.props.onClear}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Reset\n                </button>\n\n                <DiscreteSlider\n                    default={4}\n                    min={1}\n                    max={8}\n                    step={1}\n                    title=\"Grid size\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Start\n                </button>                \n                <DiscreteSlider\n                    default={50}\n                    min={1}\n                    max={100}\n                    step={1}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                />\n\n                \n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu;","import React, {Component} from 'react';\nimport Cells from \"./cells\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\n\nclass Queen extends Component {\n    state={\n        board:[],\n        number:4,\n        speed:490,\n        isRunning:false\n    }\n\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const board = getBoard(this.state.number);\n       // board[3][3].isPresent = true;\n        this.setState({board});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n               \n                <div style={{textAlign:\"Center\"}}>\n                    <Cells\n                        board={this.state.board}\n                    />\n                </div>\n                 <Menu\n                    onSpeedChange={this.handleSpeedChange}\n                    onCountChange={this.handleQueenChange}\n                    onViusalize={this.startAlgo}\n                    disable={this.state.isRunning}\n                    onClear={this.handleClear}\n                    onStop={this.handleStop}\n                />\n            </div>\n        );\n    }\n\n    handleStop =() =>{\n        this.setState({isRunning:false});\n    }\n\n    handleSpeedChange = (val)=>{\n        const speed = (100-val)*10;\n        this.setState({speed});\n    }\n    handleQueenChange = (number)=>{\n        this.setState({number});\n        const board = getBoard(this.state.number);\n        this.setState({board});\n    }\n    handleClear = () => {\n        const board = getBoard(this.state.number);\n        this.setState({board});\n    }\n    handleTurnOff =  () => {\n        const newBoard = turnOffAttack(this.state.board,this.state.number);\n        this.setState({board:newBoard});\n    }\n    startAlgo = async ()=>{\n        this.setState({isRunning:true});\n        const newBoard = this.state.board.slice();\n        await this.queensAlgo(newBoard,0);\n        const newBoard2 = turnOffAttack(this.state.board,this.state.number);\n        this.setState({board:newBoard2,isRunning:false});\n    }\n    queensAlgo =  async (board,col) => {\n\n        if( col>=this.state.number ){\n            return true;\n        }\n\n        let newBoard = board.slice();\n        for( let i = 0; i < this.state.number;i++ ){\n\n\n            newBoard = turnOffAttack(newBoard,this.state.number);\n            const result = getChecked(newBoard,i,col,this.state.number);\n            newBoard = result[0];\n\n            this.setState({board:newBoard});\n            await sleep(this.state.speed);\n            if( result[1] ){\n                const res = await this.queensAlgo(newBoard,col+1)\n                if( res === true){\n                    return true;\n                }\n                newBoard[i][col] = {...newBoard[i][col],isPresent:true,isCurrent:true};\n                this.setState({board:newBoard});\n                await sleep(this.state.speed);\n                newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\n                this.setState({board:newBoard});\n\n            }\n            newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\n            newBoard = turnOffAttack(newBoard,this.state.number);\n            this.setState({board:newBoard});\n            await sleep(this.state.speed);\n        }\n        return false;\n    }\n\n}\n\nexport default Queen;\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst turnOffAttack = (board,N) =>{\n    const newBoard = board.slice();\n    for( let i = 0;i<N; i++ ){\n        for( let j = 0;j<N;j++ ){\n            newBoard[i][j] = {...newBoard[i][j],isChecked:false, isAttacked:false,isCurrent:false};\n        }\n    }\n    return newBoard;\n}\n\nconst getChecked = (board,row,col,N) =>{\n    const newBoard = board.slice();\n    let pos = true;\n    // same col\n    for( let i = 0;i < N;i++ ){\n        if( newBoard[row][i].isPresent ){\n            newBoard[row][i] = {...newBoard[row][i],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[row][i] = {...newBoard[row][i],isChecked:true};\n        }\n    }\n    // same row\n    for( let i = 0;i < N;i++ ){\n        if( newBoard[i][col].isPresent ){\n            newBoard[i][col] = {...newBoard[i][col],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][col] = {...newBoard[i][col],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i >= 0 && j >= 0; i--, j--){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i <N && j >= 0; i++, j--){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i <N && j < N; i++, j++){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i>=0 && j < N; i--, j++){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n\n    newBoard[row][col] = {...newBoard[row][col],isPresent:true,isCurrent:true};\n\n    return [newBoard,pos];\n}\nconst getBoard = (N) =>{\n    const rows = [];\n    for( let i = 0;i<N;i++ ){\n        const cols = [];\n        for(let j =0;j<N;j++){\n            cols.push(getCell(i,j));\n        }\n        rows.push(cols);\n    }\n    return rows;\n}\n\nconst getCell = (row,col)=>{\n    return{\n        row,\n        col,\n        isPresent:false,\n        isChecked:false,\n        isAttacked:false,\n        isCurrent:false\n    }\n}","import React, {Component} from 'react';\nimport './style.css';\nclass Rect extends Component {\n\n    render() {\n        return (\n            <div\n                className='rect'\n                style={{height:this.props.rect.width,\n                    border: this.checkBorder(),\n                    background:this.checkColor(),\n                    margin:this.props.marg\n\n\n                }}\n            >\n                \n            </div>\n        );\n    }\n    checkColor = () => {\n        if( this.props.rect.isSorted ){\n            return \"#77d65c\";\n        } else if( this.props.rect.isSorting ){\n            return \"#d9200f\";\n        } else if( this.props.rect.isLeft ){\n            return \"#48D1CC\";\n        } else if(this.props.rect.isRight){\n            return \"#FFD700\";\n        }else{\n            return \"white\";\n        }\n    }\n    checkBorder = () =>{\n        if( this.props.rect.isRange ){\n            return \"0px solid black\";\n        } else{\n            return \"0px\"\n        }\n    }\n}\n\nexport default Rect;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div className=\"d-flex justify-content-center align-items-end\">\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rectidx}\n                            rect={rect}\n                        />\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Rects;","let values = [];\nexport default function mergeSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n   // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    mergeS(rects,0,sz);\n    return values;\n}\n\nfunction merge(rects, l, m, r){\n  //  console.log(l,\" \",r);\n    let n1 = m-l+1;\n    let n2 = r-m;\n\n    const L = rects.slice(l, m+1);\n    const R = rects.slice(m+1,r+1);\n    let i = 0;\n    let j = 0;\n    let k = l;\n    while(i<n1 && j<n2){\n        if( L[i].width <= R[j].width ){\n            rects[k] = L[i];\n            i++;\n        } else{\n            rects[k] = R[j];\n            j++;\n        }\n        k++;\n    }\n    while (i < n1) {\n        rects[k] = L[i];\n        i++;\n        k++;\n    }\n    while (j < n2) {\n        rects[k] = R[j];\n        j++;\n        k++;\n    }\n\n}\n\nfunction mergeS(rects,l,r){\n\n    if( l>=r ) return;\n    let m = l+ (r-l)/2;\n    m = Math.floor(m);\n   // console.log(\"iiiiiiiiiiiiiiiiiiiiiiiii \",m);\n    mergeS(rects,l,m);\n    mergeS(rects,m+1,r);\n    merge(rects,l,m,r);\n    let rectsCopy = rects.slice(l,r+1);\n    let value = {\n        left:l,\n        right:r,\n        mid:m,\n        val:rectsCopy\n    }\n    values.push(value);\n}","let values = [];\nexport default function HeapSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n   // sz = sz-1;\n    heapSort(rects,sz);\n    return values;\n}\nfunction heapify(rects,n,i){\n    let largest = i; // Initialize largest as root\n    let l = 2 * i + 1; // left = 2*i + 1\n    let r = 2 * i + 2; // right = 2*i + 2\n\n    // If left child is larger than root\n    if (l < n && rects[l].width > rects[largest].width)\n        largest = l;\n\n    // If right child is larger than largest so far\n    if (r < n && rects[r].width > rects[largest].width)\n        largest = r;\n\n    // If largest is not root\n    if (largest != i) {\n        let temp = rects[i];\n        rects[i] = rects[largest];\n        rects[largest] = temp;\n        let value = {\n            left:i,\n            right:largest,\n            sorted: false\n        }\n        values.push(value);\n        // Recursively heapify the affected sub-tree\n        heapify(rects, n, largest);\n    }\n}\nfunction heapSort(rects,n){\n    for(let i = Math.floor(n/2)-1;i>=0;i--){\n      //  console.log(\"heap \",n,\" \",i);\n        heapify(rects,n,i);\n    }\n    for (let i = n-1 ; i > 0; i--) {\n        // Move current root to end\n        let temp = rects[i];\n        rects[i] = rects[0];\n        rects[0] = temp;\n        let value = {\n            left:i,\n            right:0,\n            sorted:true\n        }\n        values.push(value);\n        // call max heapify on the reduced heap\n        heapify(rects, i, 0);\n    }\n}\n","let values = [];\n\nexport function quickSortRecursive(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n    // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    quick(rects,0,sz);\n    return values;\n}\n\n\nfunction getPartition(rects, left, right){\n    values.push({\n        left,\n        right,\n        swap:false,\n        changedRange:true,\n    })\n    let pivot = rects[right].width\n    let it = left-1;\n    for(var j=left;j<=right-1;j++){\n        if( rects[j].width< pivot){\n            it++;\n            if( it!==j ){\n                // swap(rects[it],rects[j];\n                const rect1 = {...rects[it]};\n                const rect2 = {...rects[j]};\n                rects[it] = rect2;\n                rects[j] = rect1;\n                values.push({\n                    left:it,\n                    right:j,\n                    swap:true,\n                    changedRange:false,\n                })\n            }\n        }\n    }\n    if( it+1!==right ){\n        const rect1 = {...rects[it+1]};\n        const rect2 = {...rects[right]};\n        rects[it+1] = rect2;\n        rects[right] = rect1;\n        values.push({\n            left:it+1,\n            right:right,\n            swap:true,\n            changedRange:false,\n        })\n    }\n    return it+1;\n}\nfunction quick(rects,left,right){\n    if( left>=right ) return ;\n    const partition = getPartition(rects,left,right);\n    quick(rects,left,partition-1);\n    quick(rects,partition+1,right);\n}","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav class=\"navbar navbar-light\">\n          <div className=\"container-fluid\">\n            <div className=\"navbar-brand\">\n              <span>Merge Sort</span>\n            </div>\n          </div>\n          </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                valueLabelDisplay=\"on\"\n                disabled={props.disable}\n            />\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\n\nclass Menu1 extends Component {\n    render() {\n        return (\n            <div id=\"menu1\">\n            <div className=\"d-flex justify-content-between\">\n                <div id=\"indication\">\n                    <div className=\"d-flex flex-row\">\n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box1\"></div><h5>Nil</h5></div> \n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box2\"></div><h5>Sorting</h5></div>\n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box3\"></div><h5>Sorted</h5></div>\n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box4\"></div><h5>Left Part</h5></div>\n                    <div className=\"p-2\"><div className=\"indicationBox\" id=\"box5\"></div><h5>Right Part</h5></div>                    \n                    </div>\n                </div>  \n                <div></div>\n                <div></div>\n                <div></div>\n                <div id=\"sizeSlider\">\n                <DiscreteSlider\n                    default={25}\n                    min={5}\n                    max={50}\n                    step={5}\n                    title=\"Size\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                </div>\n                <div></div>              \n            </div>\n            \n            </div>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu1;","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\n\nclass Menu2 extends Component {\n    render() {\n        return (\n            <div id=\"menu2\">\n            <div className=\"d-flex justify-content-around\">\n                <div></div>\n                <button\n                    className='btn btn-info'\n                    onClick={this.props.onRandomize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Random\n                </button>\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Sort\n                </button>\n                <DiscreteSlider\n                    default={50}\n                    min={0}\n                    max={100}\n                    step={5}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                    disable={false}\n                />\n                <div></div>\n                </div>\n\n            \n        </div>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu2;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\nimport Rects from \"./rects\";\nimport mergeSort from '../algorithms/mergeSort';\nimport heapSort from \"../algorithms/heapSort\";\nimport {quickSortRecursive} from \"../algorithms/quickSortRecursive\";\nimport Navbar from \"./navbar\";\nimport Menu1 from \"./menu1\";\nimport Menu2 from \"./menu2\";\n\nclass RecursiveSort extends Component {\n    state = {\n        count: 20,\n        rects: [],\n        speed: 50,\n        isRunning: false,\n        algo: 0\n    }\n\n    constructor() {\n        super();\n    }\n\n    componentDidMount() {\n        var rects = getInitialRects(this.state.count);\n        this.setState({rects});\n        /* var rects2 = rects.slice();\n         console.log(rects2);\n         rects = mergeSort(rects);\n         console.log(rects);*/\n\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar/>\n                <Menu1\n                    disable={this.state.isRunning}\n                    onViusalize={this.handleSort}\n                    onRandomize={this.handleRandomize}\n                    onRefresh={this.handleRefresh}\n                    onCountChange={this.handleCountChange}\n                    onAlgoChanged={this.handleAlgoChanged}\n                    onSpeedChange={this.handleSpeedChanged}\n                />\n                <div className=' justify-content-center' id=\"bars\">\n                    <Rects\n                        rects={this.state.rects}\n                    />\n\n                </div>\n                <Menu2\n                    disable={this.state.isRunning}\n                    onViusalize={this.handleSort}\n                    onRandomize={this.handleRandomize}\n                    onRefresh={this.handleRefresh}\n                    onCountChange={this.handleCountChange}\n                    onAlgoChanged={this.handleAlgoChanged}\n                    onSpeedChange={this.handleSpeedChanged}\n                />\n            </React.Fragment>\n        );\n    }\n\n    handleRandomize = () => {\n        const rect = getInitialRects(this.state.count);\n        this.setState({rects: rect});\n    }\n    handleRefresh = () => {\n        const rects = this.state.rects;\n        for (let i = 0; i < rects.length; i++) {\n            const rect = {...rects[i], isSorted: false, isSorting: false}\n            rects[i] = rect;\n        }\n        this.setState({rects});\n    }\n    handleCountChange = (val) => {\n        this.setState({count: val});\n        this.handleRandomize();\n    }\n    handleAlgoChanged = (pos, val) => {\n        if (pos === 0) {\n            console.log(\"sup 0\");\n            this.setState({algo: val});\n        }\n    }\n    handleSpeedChanged = (val) => {\n        const speed = (110 - val);\n        this.setState({speed});\n    }\n\n    handleSort = () => {\n\n        this.setState({isRunning: true});\n        let steps;\n        let rects2;\n        switch (this.state.algo) {\n\n            case 0:\n                steps = mergeSort(this.state.rects);\n                this.handleMerge(steps);\n                break;\n            case 1:\n                rects2 = this.state.rects.slice();\n                steps = heapSort(rects2);\n                this.handleHeap(steps);\n                break;\n            case 2:\n                rects2 = this.state.rects.slice();\n                steps = quickSortRecursive(rects2);\n                this.handleQuick(steps);\n                break;\n            default:\n        }\n\n\n    }\n\n    handleQuick = async (steps) =>{\n        this.setState({isRunning: true});\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n        let hasChanged = -1;\n        let changed;\n        for(let i=0;i<steps.length;i++){\n            let step = steps[i];\n            if( hasChanged!==-1 ){\n                let {left,right} = changed;\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: false,isRight:false,isRange:false};\n                prevRect[right] = {...prevRect[right], isLeft: false,isSorting: false,isRight:false,isRange:false};\n            }\n            if( step.changedRange ){\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n                let {left,right} = step;\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false};\n                }\n                for (let j = left; j <=right; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:true,isRange:true};\n                }\n                this.setState({rects: prevRect});\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false};\n                }\n            }else if(step.swap){\n                let {left,right} = step;\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: true,isRight:false,isRange:false};\n                prevRect[right] = {...prevRect[right], isLeft: true,isSorting: false,isRight:false,isRange:false};\n                let temp = prevRect[left];\n                prevRect[left] = prevRect[right];\n                prevRect[right] = temp;\n                hasChanged = 1;\n                changed = step;\n            }\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            if (i === steps.length - 1) {\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: false,isRange:false};\n                }\n                this.setState({rects: prevRect});\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: true,isRange:false};\n                    this.setState({rects: prevRect});\n                    await sleep(10);\n                }\n                this.setState({isRunning: false,rects: prevRect});\n            }\n        }\n    }\n    handleHeap = async (steps) =>{\n        this.setState({isRunning: true});\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n\n        for(let i = 0;i<steps.length;i++){\n            let step = steps[i];\n            //   console.log(step);\n            for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\n            }\n            let {left,right,sorted} = step;\n            prevRect[left] = {...prevRect[left],isLeft:true};\n            prevRect[right] = {...prevRect[right],isRight:true};\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            let temp = prevRect[left];\n            prevRect[left] = prevRect[right];\n            prevRect[right] = temp;\n            this.setState({rects: prevRect});\n            if( sorted ) prevRect[left] = {...prevRect[left],isSorted: true};\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n            if (i === steps.length - 1) {\n\n                for (let i = 0; i < this.state.count; i++) {\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\n                    this.setState({rects: prevRect});\n                    await sleep(this.state.speed);\n                }\n                this.setState({isRunning: false,rects: prevRect});\n            }\n        }\n    }\n    handleMerge = async (steps) => {\n        this.setState({isRunning1: true});\n\n        const {speed} = this.state;\n\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n        await sleep(this.state.speed);\n      //  console.log(\"steps \", steps.length);\n        for (let ii = 0; ii < steps.length; ii++) {\n            let step = steps[ii];\n            for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\n            }\n           // console.log(step.left,\" \",step.mid,\" \",step.right);\n            for (let i = step.left; i <= step.mid; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: true,isSorting: false};\n            }\n            for (let i = step.mid + 1; i <= step.right; i++) {\n                prevRect[i] = {...prevRect[i], isRight: true,isLeft:false,isSorting: false};\n            }\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n          //  console.log(step);\n            for(let i= step.left;i<=step.right;i++){\n                prevRect[i] = {...prevRect[i],width:step.val[i-step.left].width,isSorting: true };\n                this.setState({rects: prevRect});\n                await sleep(this.state.speed);\n            }\n\n            if (ii === steps.length - 1) {\n\n                for (let i = 0; i < this.state.count; i++) {\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\n                    this.setState({rects: prevRect});\n                    await sleep(this.state.speed);\n                }\n                this.setState({isRunning: false});\n            }\n\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            prevRect = this.state.rects;\n          /*  for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: false};\n            }*/\n            this.setState({rects: prevRect});\n        }\n    }\n\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for (let i = 0; i < tot; i++) {\n        rects.push(getRect());\n    }\n    return rects;\n}\nconst getRect = () => {\n    return {\n        width: Math.floor(Math.random() * 200) + 50,\n        isSorted: false,\n        isSorting: false,\n        isLeft: false,\n        isRight: false\n    }\n}\n\nexport default RecursiveSort;","import React, {Component} from 'react';\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\nimport Home from \"./homeComponents/home\";\nimport Sort from \"./sortComponents/sort\";\nimport Queen from \"./queenComponents/queen\";\nimport RecursiveSort from \"./recursiveSortComponents/recursiveSort\";\nclass App extends Component {\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n        console.log(window.innerHeight,\"  \",window.innerWidth);\n    }\n\n    render() {\n        return (\n            <Router basename='/'>\n                <Switch>\n                    <Route path='/sort' component={Sort}/>\n                    <Route path='/nqueen' component={Queen}/>\n                    <Route path='/recursivesort' component={RecursiveSort}/>\n                    <Route path='/' component={Home}/>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}